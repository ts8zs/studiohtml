import{_ as i,M as l,p as c,q as p,R as n,N as t,V as a,t as e,Q as u,a1 as d}from"./framework-5866ffd3.js";const r={},h=d('<h1 id="soundservice" tabindex="-1"><a class="header-anchor" href="#soundservice" aria-hidden="true">#</a> SoundService</h1><hr><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><p>此类是一个服务！它是顶级单例，可以使用<code>GetService</code>函数获取。为负责将 <code>Players</code>玩家在不同服务器和场景间进行传送的服务。</p><p><em>继承自</em>：</p>',5),_=n("hr",null,null,-1),m=n("h2",{id:"属性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),e(" 属性")],-1),S={style:{"text-align":"left"}},k={style:{width:"700px"}},v=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"3D声音衰减速度")])],-1),f={style:{"text-align":"left"}},y={style:{width:"700px"}},b=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"3D声音衰减距离")])],-1),x={style:{"text-align":"left"}},T={style:{width:"700px"}},L=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"3D声音多普勒效应强度")])],-1),g={style:{"text-align":"left"}},A={style:{width:"700px"}},N=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"全局音量")])],-1),w=n("hr",null,null,-1),D=n("h2",{id:"函数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#函数","aria-hidden":"true"},"#"),e(" 函数")],-1),E={style:{"text-align":"left"}},C={style:{width:"700px"}},O=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"设置监听类型与监听者")])],-1),j={style:{"text-align":"left"}},F={style:{width:"700px"}},P=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"在本地播放声音节点（2D，不会同步）")])],-1),V={style:{"text-align":"left"}},B={style:{width:"700px"}},R=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"在本地开关声音（包括游戏本身的音乐和声音节点）")])],-1),q=d(`<hr><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2><hr><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码：</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> SoundService <span class="token operator">=</span> game<span class="token punctuation">:</span><span class="token function">GetService</span><span class="token punctuation">(</span><span class="token string">&quot;SoundService&quot;</span><span class="token punctuation">)</span>
SoundService<span class="token punctuation">:</span><span class="token function">SetSoundOpen</span><span class="token punctuation">(</span><span class="token keyword">true</span><span class="token punctuation">)</span>                    <span class="token comment">--打开声音</span>
<span class="token keyword">local</span> listenertype <span class="token operator">=</span> SoundService<span class="token punctuation">.</span>ListenerType     <span class="token comment">--监听类型</span>
<span class="token keyword">local</span> listenerobject <span class="token operator">=</span> SoundService<span class="token punctuation">.</span>ListenerObject <span class="token comment">--监听对象</span>
SoundService<span class="token punctuation">.</span>RolloffScale <span class="token operator">=</span> <span class="token number">1</span>                      <span class="token comment">--衰减速度</span>
SoundService<span class="token punctuation">.</span>DistanceFactor <span class="token operator">=</span> <span class="token number">0</span>                    <span class="token comment">--衰减距离</span>
SoundService<span class="token punctuation">.</span>DopplerScale <span class="token operator">=</span> <span class="token number">0</span>                      <span class="token comment">--多普勒效应强度</span>
<span class="token keyword">local</span> soundnode <span class="token operator">=</span> game<span class="token punctuation">.</span>WorkSpace<span class="token punctuation">.</span>Sound             <span class="token comment">--获取Sound节点</span>
SoundService<span class="token punctuation">:</span><span class="token function">PlayerLocalSound</span><span class="token punctuation">(</span>soundnode<span class="token punctuation">)</span>           <span class="token comment">--本地播放</span>
<span class="token keyword">local</span> transnode <span class="token operator">=</span> game<span class="token punctuation">.</span>WorkSpace<span class="token punctuation">.</span>TransNode         <span class="token comment">--获取TransObject节点</span>
SoundService<span class="token punctuation">:</span><span class="token function">SetListener</span><span class="token punctuation">(</span>Enum<span class="token punctuation">.</span>ListenerType<span class="token punctuation">.</span>TransObject<span class="token punctuation">,</span>transnode<span class="token punctuation">)</span>       <span class="token comment">--设置监听者</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function G(W,I){const s=l("RouterLink"),o=l("font");return c(),p("div",null,[h,n("ul",null,[n("li",null,[t(s,{to:"/Api/Class/NoType/SandBoxNode.html"},{default:a(()=>[e("SandBoxNode")]),_:1})])]),_,m,u(' |<div style="width:700px">[ListenerType](/Api/Enumerate/Sound/EnumListenerType.md)  &emsp;<font color="dd00dd">ListenerType</font> </div>|\n|:---|\n|设置当前监听类型，具体参考：[ListenerType](/Api/Enumerate/Sound/EnumListenerType.md)<br>	只可在脚本获取，不可写。 |\n\n|<div style="width:700px">[SandboxNode](/Api/Class/NoType/SandboxNode.md)  &emsp;<font color="dd00dd">ListenerObject</font> </div>|\n|:---|\n|只可在脚本获取，不可写，当[`ListenerType`](/Api/Enumerate/Sound/EnumListenerType.md)为`Camrea`时返回`nil`，当[`ListenerType`](/Api/Enumerate/Sound/EnumListenerType.md)为`TransObject`时,返回`TransObject`节点指针| '),n("table",null,[n("thead",null,[n("tr",null,[n("th",S,[n("div",k,[t(s,{to:"/Api/DataType/Float.html"},{default:a(()=>[e("float")]),_:1}),e("  "),t(o,{color:"dd00dd"},{default:a(()=>[e("RolloffScale")]),_:1})])])])]),v]),n("table",null,[n("thead",null,[n("tr",null,[n("th",f,[n("div",y,[t(s,{to:"/Api/DataType/Float.html"},{default:a(()=>[e("float")]),_:1}),e("  "),t(o,{color:"dd00dd"},{default:a(()=>[e("DistanceFactor")]),_:1})])])])]),b]),n("table",null,[n("thead",null,[n("tr",null,[n("th",x,[n("div",T,[t(s,{to:"/Api/DataType/Float.html"},{default:a(()=>[e("float")]),_:1}),e("  "),t(o,{color:"dd00dd"},{default:a(()=>[e("DopplerScale")]),_:1})])])])]),L]),n("table",null,[n("thead",null,[n("tr",null,[n("th",g,[n("div",A,[t(s,{to:"/Api/DataType/Int.html"},{default:a(()=>[e("int")]),_:1}),e("  "),t(o,{color:"dd00dd"},{default:a(()=>[e("GlobalVolume")]),_:1})])])])]),N]),w,D,n("table",null,[n("thead",null,[n("tr",null,[n("th",E,[n("div",C,[t(s,{to:"/Api/Parameter/void.html"},{default:a(()=>[e("void")]),_:1}),e("  "),t(s,{to:"/Api/Class/Sound/SandboxSoundService_F/SetListener.html"},{default:a(()=>[t(o,{color:"dd00dd"},{default:a(()=>[e("SetListener")]),_:1})]),_:1}),e("( "),t(s,{to:"/Api/Enumerate/Sound/EnumListenerType.html"},{default:a(()=>[e("ListenerType")]),_:1}),e(" type, "),t(s,{to:"/Api/Class/NoType/SandboxNode.html"},{default:a(()=>[e("SandboxNode")]),_:1}),e(" object )")])])])]),O]),n("table",null,[n("thead",null,[n("tr",null,[n("th",j,[n("div",F,[t(s,{to:"/Api/Parameter/void.html"},{default:a(()=>[e("void")]),_:1}),e("  "),t(s,{to:"/Api/Class/Sound/SandboxSoundService_F/PlayerLocalSound.html"},{default:a(()=>[t(o,{color:"dd00dd"},{default:a(()=>[e("PlayerLocalSound")]),_:1})]),_:1}),e("( "),t(s,{to:"/Api/Class/NoType/SandboxNode.html"},{default:a(()=>[e("SandboxNode")]),_:1}),e(" sound )")])])])]),P]),n("table",null,[n("thead",null,[n("tr",null,[n("th",V,[n("div",B,[t(s,{to:"/Api/Parameter/void.html"},{default:a(()=>[e("void")]),_:1}),e("  "),t(s,{to:"/Api/Class/Sound/SandboxSoundService_F/SetSoundOpen.html"},{default:a(()=>[t(o,{color:"dd00dd"},{default:a(()=>[e("SetSoundOpen")]),_:1})]),_:1}),e("("),t(s,{to:"/Api/DataType/Bool.html"},{default:a(()=>[e("bool")]),_:1}),e(" value)")])])])]),R]),q])}const Q=i(r,[["render",G],["__file","SandboxSoundService.html.vue"]]);export{Q as default};
