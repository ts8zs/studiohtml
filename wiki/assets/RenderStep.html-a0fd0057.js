import{_ as t,p as e,q as a,a1 as d}from"./framework-5866ffd3.js";const n={},l=d(`<h1 id="renderstep" tabindex="-1"><a class="header-anchor" href="#renderstep" aria-hidden="true">#</a> RenderStep</h1><hr><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><p>函数所属类：<a href="">RunService</a></p><p>绑定RenderStep时间的Lua函数。将自定义函数调用时机绑定通过<a href="">RenderPriority</a>绑定至指定步骤。因为渲染与客户端相关，所以必须在客户端上调用</p><hr><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><table><thead><tr><th style="text-align:left;"><div style="width:100px;">名称</div></th><th style="text-align:left;"><div style="width:100px;">类型</div></th><th style="text-align:left;"><div style="width:50px;">默认</div></th><th style="text-align:left;"><div style="width:350px;">描述</div></th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:left;"><a href="">string</a></td><td style="text-align:left;"></td><td style="text-align:left;">用于绑定的名称，是唯一标识，解绑时需要使用<a href="">UnbindFromRenderStep</a>并以该参数进行解绑</td></tr><tr><td style="text-align:left;">priority</td><td style="text-align:left;"><a href="">int</a></td><td style="text-align:left;"></td><td style="text-align:left;">设置函数的优先级（参考枚举<a href="">RenderPriority</a>）</td></tr><tr><td style="text-align:left;">func</td><td style="text-align:left;"><a href="">fun</a></td><td style="text-align:left;"></td><td style="text-align:left;">绑定对应的函数</td></tr></tbody></table><h2 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h2><p>无返回值</p><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,12),i=[l];function r(s,h){return e(),a("div",null,i)}const f=t(n,[["render",r],["__file","RenderStep.html.vue"]]);export{f as default};
