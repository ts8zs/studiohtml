import{_ as c,M as l,p,q as i,R as n,t as a,N as s,V as e,a1 as d}from"./framework-5866ffd3.js";const u={},r=n("h1",{id:"spawnlocation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#spawnlocation","aria-hidden":"true"},"#"),a(" SpawnLocation")],-1),h=n("hr",null,null,-1),_=n("h2",{id:"描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#描述","aria-hidden":"true"},"#"),a(" 描述")],-1),m=n("code",null,"Player",-1),k=n("p",null,[n("em",null,"继承自"),a("：")],-1),b=n("hr",null,null,-1),f=n("h2",{id:"属性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),a(" 属性")],-1),v={style:{"text-align":"left"}},y={style:{width:"700px"}},w={style:{"text-align":"left"}},T=n("code",null,"true",-1),x=n("code",null,"Player",-1),g={style:{"text-align":"left"}},C={style:{width:"700px"}},S={style:{"text-align":"left"}},A=n("code",null,"Player",-1),N=n("code",null,"Touch",-1),P=n("code",null,"Location",-1),L=n("code",null,"TeamColor",-1),O=n("code",null,"Team",-1),V={style:{"text-align":"left"}},B={style:{width:"700px"}},G=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},[a("队伍颜色("),n("code",null,"Rainbow::ColorQuad"),a(")，跟"),n("code",null,"TeamColor"),a("可对应")])])],-1),j=d(`<hr><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h2><hr><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> Teams <span class="token operator">=</span> game<span class="token punctuation">:</span><span class="token function">GetService</span><span class="token punctuation">(</span><span class="token string">&#39;Teams&#39;</span><span class="token punctuation">)</span>
<span class="token comment">--创建开始队伍</span>
<span class="token keyword">local</span> team1 <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;Team&#39;</span><span class="token punctuation">,</span> Teams<span class="token punctuation">)</span>
team1<span class="token punctuation">.</span>AutoAssignable <span class="token operator">=</span> <span class="token keyword">true</span>
team1<span class="token punctuation">.</span>TeamColor <span class="token operator">=</span> Vector3<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment">--创建重生点</span>
<span class="token keyword">local</span> team1Spawn <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;SpawnLocation&#39;</span><span class="token punctuation">,</span> game<span class="token punctuation">.</span>WorkSpace<span class="token punctuation">)</span>
team1Spawn<span class="token punctuation">.</span>Neutral <span class="token operator">=</span> <span class="token keyword">false</span>
team1Spawn<span class="token punctuation">.</span>AllowTeamChangeOnTouch <span class="token operator">=</span> <span class="token keyword">true</span>
team1Spawn<span class="token punctuation">.</span>TeamColor <span class="token operator">=</span> team1<span class="token punctuation">.</span>TeamColor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function R(D,Q){const t=l("RouterLink"),o=l("font");return p(),i("div",null,[r,h,_,n("p",null,[a("可确定"),s(t,{to:"/Api/Class/GamePlay/ScenePlayerObject.html"},{default:e(()=>[m]),_:1}),a("（玩家）死亡时在何处重生")]),k,n("ul",null,[n("li",null,[s(t,{to:"/Api/Class/NoType/SceneTransObject.html"},{default:e(()=>[a("Transform")]),_:1})])]),b,f,n("table",null,[n("thead",null,[n("tr",null,[n("th",v,[n("div",y,[s(t,{to:"/Api/DataType/Bool.html"},{default:e(()=>[a("bool")]),_:1}),a(" "),s(o,{color:"dd00dd"},{default:e(()=>[a("Neutral")]),_:1})])])])]),n("tbody",null,[n("tr",null,[n("td",w,[a("是否隶属与特定队伍，设置为"),T,a("之后，任意队伍中的任意"),s(t,{to:"/Api/Class/GamePlay/ScenePlayerObject.html"},{default:e(()=>[x]),_:1}),a("可以在此位置重生")])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",g,[n("div",C,[s(t,{to:"/Api/DataType/Bool.html"},{default:e(()=>[a("bool")]),_:1}),a("  "),s(o,{color:"dd00dd"},{default:e(()=>[a("AllowTeamChangeOnTouch")]),_:1})])])])]),n("tbody",null,[n("tr",null,[n("td",S,[a("是否允许"),s(t,{to:"/Api/Class/GamePlay/ScenePlayerObject.html"},{default:e(()=>[A]),_:1}),a("通过"),N,a("触摸该"),P,a("来加入对应"),L,a("的"),s(t,{to:"/Api/Class/GamePlay/SandboxTeam.html"},{default:e(()=>[O]),_:1}),a("队伍")])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",V,[n("div",B,[s(t,{to:"/Api/DataType/ColorQuad.html"},{default:e(()=>[a("ColorQuad")]),_:1}),a("  "),s(o,{color:"dd00dd"},{default:e(()=>[a("TeamColor")]),_:1})])])])]),G]),j])}const E=c(u,[["render",R],["__file","SpawnLocation.html.vue"]]);export{E as default};
