import{_ as i,M as p,p as c,q as u,R as s,N as a,V as t,t as n,a1 as l}from"./framework-5866ffd3.js";const d={},r=l('<h1 id="cloudservice" tabindex="-1"><a class="header-anchor" href="#cloudservice" aria-hidden="true">#</a> CloudService</h1><hr><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><p>此类是一个服务！它是<code>Cloud</code>节点，可以使用<code>GetService</code>函数获取。负责<code>Cloud</code>服务。</p><p><em>继承自</em>：</p>',5),k=s("hr",null,null,-1),v=s("h2",{id:"函数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#函数","aria-hidden":"true"},"#"),n(" 函数")],-1),m={style:{"text-align":"left"}},b={style:{width:"700px"}},h=s("tbody",null,[s("tr",null,[s("td",{style:{"text-align":"left"}},"同步设置KV值")])],-1),g={style:{"text-align":"left"}},f={style:{width:"700px"}},y=s("tbody",null,[s("tr",null,[s("td",{style:{"text-align":"left"}},"同步请求kv值")])],-1),_={style:{"text-align":"left"}},q={style:{width:"700px"}},S=s("tbody",null,[s("tr",null,[s("td",{style:{"text-align":"left"}},"异步设置KV值")])],-1),x={style:{"text-align":"left"}},w={style:{width:"700px"}},A=s("tbody",null,[s("tr",null,[s("td",{style:{"text-align":"left"}},"异步获取KV值")])],-1),V=l(`<hr><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> utils <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">function</span> utils<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span>
    <span class="token keyword">local</span> status<span class="token punctuation">,</span>err<span class="token punctuation">,</span>ret <span class="token operator">=</span> <span class="token function">xpcall</span><span class="token punctuation">(</span>func<span class="token punctuation">,</span>debug<span class="token punctuation">.</span>traceback<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> status <span class="token keyword">then</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;err = &quot;</span> <span class="token operator">..</span> <span class="token function">tostring</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;ret = &quot;</span> <span class="token operator">..</span> <span class="token function">tostring</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> utils<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">...</span><span class="token punctuation">)</span>
    <span class="token keyword">local</span> args <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token punctuation">}</span>
    args<span class="token punctuation">[</span><span class="token operator">#</span>args <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;\\n&#39;</span>
    <span class="token keyword">local</span> tab <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token keyword">in</span> <span class="token function">ipairs</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token keyword">do</span>
        tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">tostring</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
    <span class="token keyword">end</span>
    <span class="token function">print</span><span class="token punctuation">(</span>table<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>

utils<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
    <span class="token keyword">local</span> service <span class="token operator">=</span> game<span class="token punctuation">:</span><span class="token function">GetService</span><span class="token punctuation">(</span><span class="token string">&quot;CloudService&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">local</span> status<span class="token punctuation">,</span>value <span class="token operator">=</span> service<span class="token punctuation">:</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">&quot;test_1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;global&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;20000&quot;</span><span class="token punctuation">)</span>
    utils<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;1111&quot;</span><span class="token punctuation">,</span>status<span class="token punctuation">,</span>value<span class="token punctuation">)</span>

    status<span class="token punctuation">,</span>value <span class="token operator">=</span> service<span class="token punctuation">:</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">&quot;test_1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;global&quot;</span><span class="token punctuation">)</span>
    utils<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;22222&quot;</span><span class="token punctuation">,</span>status<span class="token punctuation">,</span>value<span class="token punctuation">)</span>

    service<span class="token punctuation">:</span><span class="token function">setValueAsync</span><span class="token punctuation">(</span><span class="token string">&quot;test_1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;global&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;30000&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>status<span class="token punctuation">,</span> value<span class="token punctuation">)</span> 
        utils<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;33333&quot;</span><span class="token punctuation">,</span>status<span class="token punctuation">,</span>value<span class="token punctuation">)</span>
    <span class="token keyword">end</span><span class="token punctuation">)</span>

    service<span class="token punctuation">:</span><span class="token function">getValueAsync</span><span class="token punctuation">(</span><span class="token string">&quot;test_1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;global&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>status<span class="token punctuation">,</span> value<span class="token punctuation">)</span> 
        utils<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;44444&quot;</span><span class="token punctuation">,</span>status<span class="token punctuation">,</span>value<span class="token punctuation">)</span>
    <span class="token keyword">end</span><span class="token punctuation">)</span>


    <span class="token keyword">local</span> idx <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> idx <span class="token operator">&lt;=</span> <span class="token number">40</span> <span class="token keyword">do</span>
        <span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        utils<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;55555&quot;</span><span class="token punctuation">,</span>idx<span class="token punctuation">)</span>
        idx <span class="token operator">=</span> idx <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span><span class="token punctuation">)</span>

<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;finish&quot;</span><span class="token punctuation">)</span>


<span class="token comment">--[[
线程 0x50cc 已退出，返回值为 0 (0x0)。
线程 0x5070 已退出，返回值为 0 (0x0)。
my log &quot;[path:game.WorkSpace.ScriptObject] 1111 true 20000 \\n&quot;
线程 0x5d78 已退出，返回值为 0 (0x0)。
线程 0x57f8 已退出，返回值为 0 (0x0)。
my log &quot;[path:game.WorkSpace.ScriptObject] 22222 true 20000 \\n&quot;
线程 0x11f0 已退出，返回值为 0 (0x0)。
线程 0x519c 已退出，返回值为 0 (0x0)。
my log &quot;[path:game.WorkSpace.ScriptObject] 33333 true 30000 \\n&quot;
[WRN] OutputWASAPI::mixerThread                : Starvation detected in WASAPI output buffer!
线程 0x3d08 已退出，返回值为 0 (0x0)。
线程 0xadc 已退出，返回值为 0 (0x0)。
my log &quot;[path:game.WorkSpace.ScriptObject] 44444 true 30000 \\n&quot;

my log &quot;[path:game.WorkSpace.ScriptObject] 55555 0 \\n&quot;
my log &quot;[path:game.WorkSpace.ScriptObject] 55555 1 \\n&quot;
my log &quot;[path:game.WorkSpace.ScriptObject] 55555 2 \\n&quot;
my log &quot;[path:game.WorkSpace.ScriptObject] 55555 3 \\n&quot;
my log &quot;[path:game.WorkSpace.ScriptObject] 55555 4 \\n&quot;
my log &quot;[path:game.WorkSpace.ScriptObject] 55555 5 \\n&quot;
my log &quot;[path:game.WorkSpace.ScriptObject] 55555 6 \\n&quot;
my log &quot;[path:game.WorkSpace.ScriptObject] 55555 7 \\n&quot;
my log &quot;[path:game.WorkSpace.ScriptObject] 55555 8 \\n&quot;
]]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function C(T,W){const e=p("RouterLink"),o=p("font");return c(),u("div",null,[r,s("ul",null,[s("li",null,[a(e,{to:"/Api/Class/NoType/SandBoxNode.html"},{default:t(()=>[n("SandBoxNode")]),_:1})])]),k,v,s("table",null,[s("thead",null,[s("tr",null,[s("th",m,[s("div",b,[a(e,{to:"/Api/DataType/Int.html"},{default:t(()=>[n("int")]),_:1}),n("  "),a(e,{to:"/Api/Class/Service/CloudService_F/SetValue.html"},{default:t(()=>[a(o,{color:"dd00dd"},{default:t(()=>[n("SetValue")]),_:1})]),_:1}),n(" ( "),a(e,{to:"/Api/DataType/String.html"},{default:t(()=>[n("string")]),_:1}),n(" key, "),a(e,{to:"/Api/DataType/String.html"},{default:t(()=>[n("string")]),_:1}),n(" name, "),a(e,{to:"/Api/DataType/String.html"},{default:t(()=>[n("string")]),_:1}),n(" value)")])])])]),h]),s("table",null,[s("thead",null,[s("tr",null,[s("th",g,[s("div",f,[a(e,{to:"/Api/DataType/Int.html"},{default:t(()=>[n("int")]),_:1}),n("  "),a(e,{to:"/Api/Class/Service/CloudService_F/GetValue.html"},{default:t(()=>[a(o,{color:"dd00dd"},{default:t(()=>[n("GetValue")]),_:1})]),_:1}),n(" ( "),a(e,{to:"/Api/DataType/String.html"},{default:t(()=>[n("string")]),_:1}),n(" key, "),a(e,{to:"/Api/DataType/String.html"},{default:t(()=>[n("string")]),_:1}),n(" name)")])])])]),y]),s("table",null,[s("thead",null,[s("tr",null,[s("th",_,[s("div",q,[a(e,{to:"/Api/DataType/Int.html"},{default:t(()=>[n("int")]),_:1}),n("  "),a(e,{to:"/Api/Class/Service/CloudService_F/SetValueAsync.html"},{default:t(()=>[a(o,{color:"dd00dd"},{default:t(()=>[n("SetValueAsync")]),_:1})]),_:1}),n(" ( "),a(e,{to:"/Api/DataType/String.html"},{default:t(()=>[n("string")]),_:1}),n(" key, "),a(e,{to:"/Api/DataType/String.html"},{default:t(()=>[n("string")]),_:1}),n(" name, "),a(e,{to:"/Api/DataType/String.html"},{default:t(()=>[n("string")]),_:1}),n(" value, "),a(e,{to:"/Api/Parameter/LuaFunction.html"},{default:t(()=>[n("LuaFunction")]),_:1}),n(" func)")])])])]),S]),s("table",null,[s("thead",null,[s("tr",null,[s("th",x,[s("div",w,[a(e,{to:"/Api/DataType/Int.html"},{default:t(()=>[n("int")]),_:1}),n("  "),a(e,{to:"/Api/Class/Service/CloudService_F/GetValueAsync.html"},{default:t(()=>[a(o,{color:"dd00dd"},{default:t(()=>[n("GetValueAsync")]),_:1})]),_:1}),n(" ("),a(e,{to:"/Api/DataType/String.html"},{default:t(()=>[n("string")]),_:1}),n(" key, "),a(e,{to:"/Api/DataType/String.html"},{default:t(()=>[n("string")]),_:1}),n(" name, "),a(e,{to:"/Api/Parameter/LuaFunction.html"},{default:t(()=>[n("LuaFunction")]),_:1}),n(" func)")])])])]),A]),V])}const O=i(d,[["render",C],["__file","CloudService.html.vue"]]);export{O as default};
