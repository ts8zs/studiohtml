import{_ as r,M as o,p as d,q as c,R as e,t,N as n,V as l,a1 as h}from"./framework-5866ffd3.js";const u={},_=e("h1",{id:"onserverinvoke",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#onserverinvoke","aria-hidden":"true"},"#"),t(" OnServerInvoke")],-1),p=e("hr",null,null,-1),f=e("h2",{id:"描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#描述","aria-hidden":"true"},"#"),t(" 描述")],-1),v={href:"/Api/Class/Script/RemoteFunction",target:"_blank",rel:"noopener noreferrer"},x=e("p",null,[t("当本地脚本"),e("a",{href:""},"LocalScript"),t("使用"),e("a",{href:""},"RemoteFunction.InvokeServer"),t("调用时，OnServerInvoke将会触发"),e("a",{href:""},"Script"),t("中绑定的函数。当绑定的函数具有返回值时，对应的值也会返回至客户端。")],-1),m=e("p",null,"此回调能够获取服务器触发的远程函数。其作用是为客户端与服务器之间提供通信方法。",-1),y=e("li",null,[e("p",null,"该函数绑定时需要使用 = 进行赋值，而不能使用事件的方法。")],-1),k=e("li",null,[e("p",null,"每次只能将一个函数赋值给OnServerInvoke，若分配多个函数，则会使用最新一次分配的函数")],-1),g=e("hr",null,null,-1),b=e("h2",{id:"参数",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参数","aria-hidden":"true"},"#"),t(" 参数")],-1),R=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},[e("div",{style:{width:"100px"}},"名称")]),e("th",{style:{"text-align":"left"}},[e("div",{style:{width:"100px"}},"类型")]),e("th",{style:{"text-align":"left"}},[e("div",{style:{width:"50px"}},"默认")]),e("th",{style:{"text-align":"left"}},[e("div",{style:{width:"350px"}},"描述")])])],-1),I=e("td",{style:{"text-align":"left"}},"arguments",-1),S={style:{"text-align":"left"}},w=e("td",{style:{"text-align":"left"}},null,-1),O=e("td",{style:{"text-align":"left"}},[t("传入 "),e("a",{href:""},"RemoteFunction.OnClientInvoke"),t(" 方法的参数")],-1),T=e("h2",{id:"返回",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#返回","aria-hidden":"true"},"#"),t(" 返回")],-1),C=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},[e("div",{style:{width:"400px"}},"类型")]),e("th",{style:{"text-align":"left"}},[e("div",{style:{width:"400px"}},"描述")])])],-1),F={style:{"text-align":"left"}},L=e("td",{style:{"text-align":"left"}},[e("a",{href:""},"RemoteFunction.OnClientInvoke"),t("函数的返回值")],-1),N=h(`<h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function V(A,q){const s=o("ExternalLinkIcon"),a=o("RouterLink"),i=o("font");return d(),c("div",null,[_,p,f,e("p",null,[t("函数所属类："),e("a",v,[t("RemoteFunction"),n(s)])]),e("p",null,[t("返回类型： "),n(a,{to:"/Api/DataType/tuple.html"},{default:l(()=>[t("ReflexTuple")]),_:1})]),x,m,e("ul",null,[e("li",null,[n(i,{color:"ff3333"},{default:l(()=>[t("注意：")]),_:1})]),y,k]),g,b,e("table",null,[R,e("tbody",null,[e("tr",null,[I,e("td",S,[n(a,{to:"/Api/DataType/tuple.html"},{default:l(()=>[t("ReflexTuple")]),_:1})]),w,O])])]),T,e("table",null,[C,e("tbody",null,[e("tr",null,[e("td",F,[n(a,{to:"/Api/DataType/tuple.html"},{default:l(()=>[t("ReflexTuple")]),_:1})]),L])])]),N])}const D=r(u,[["render",V],["__file","OnServerInvoke.html.vue"]]);export{D as default};
