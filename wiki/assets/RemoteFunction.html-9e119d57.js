import{_ as c,M as i,p as u,q as d,R as n,t as e,N as t,V as s,a1 as l}from"./framework-5866ffd3.js";const r={},p=n("h1",{id:"remotefunction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#remotefunction","aria-hidden":"true"},"#"),e(" RemoteFunction")],-1),m=n("hr",null,null,-1),v=n("h2",{id:"描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#描述","aria-hidden":"true"},"#"),e(" 描述")],-1),_=n("strong",null,"RemoteFunction",-1),h=n("code",null,"API",-1),k=n("code",null,"RemoteFunction",-1),f=n("code",null,"RemoteEvent",-1),g=n("br",null,null,-1),b=n("hr",null,null,-1),S=n("h2",{id:"属性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),e(" 属性")],-1),R=n("hr",null,null,-1),F=n("h2",{id:"函数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#函数","aria-hidden":"true"},"#"),e(" 函数")],-1),q={style:{"text-align":"left"}},x={style:{width:"700px"}},C={style:{"text-align":"left"}},I=n("br",null,null,-1),y=n("code",null,"RemoteFunction.OnServerInvoke",-1),A={style:{"text-align":"left"}},T={style:{width:"700px"}},w={style:{"text-align":"left"}},O=n("br",null,null,-1),P=n("code",null,"RemoteFunction.OnClientInvoke",-1),N=n("hr",null,null,-1),L=n("h2",{id:"回调",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#回调","aria-hidden":"true"},"#"),e(" 回调")],-1),M={style:{"text-align":"left"}},G={style:{width:"700px"}},V={style:{"text-align":"left"}},W=n("code",null,"RemoteFunction:InvokeServer",-1),B={style:{"text-align":"left"}},E={style:{width:"700px"}},D={style:{"text-align":"left"}},j=n("code",null,"RemoteFunction:InvokeClient",-1),z=l(`<hr><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><p><strong>脚本中创建RemoteFunction(注意要求其父节点必须是MainStorage)</strong></p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">--代码中动态创建RemoteFunction示例 </span>
<span class="token keyword">local</span> mainStorageService <span class="token operator">=</span> game<span class="token punctuation">:</span><span class="token function">GetService</span><span class="token punctuation">(</span><span class="token string">&quot;MainStorage&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">local</span> node1 <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;RemoteFunction&#39;</span><span class="token punctuation">)</span>
node1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;test_remotefunc_name&quot;</span>
node1<span class="token punctuation">:</span><span class="token function">SetParent</span><span class="token punctuation">(</span>mainStorageService<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),H=n("p",null,[n("strong",null,[n("code",null,"RemoteFunction:"),e("客户端至服务器")])],-1),J=n("code",null,"LocalScript",-1),K=n("code",null,"RemoteFunction:InvokeServer",-1),Q=n("br",null,null,-1),U=n("code",null,"Script",-1),X=n("code",null,"RemoteFunction.OnServerInvoke",-1),Y=n("code",null,"InvokeServer",-1),Z=l(`<div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">--客户端的调用脚本</span>
<span class="token keyword">local</span> mainStorageService <span class="token operator">=</span> game<span class="token punctuation">:</span><span class="token function">GetService</span><span class="token punctuation">(</span><span class="token string">&quot;MainStorage&quot;</span><span class="token punctuation">)</span>
<span class="token comment">--这里的 testf1 是一个RemoteFunction类型的实例,它的name = &quot;testf1&quot;</span>
<span class="token comment">--都是预先在编辑地图时预先创建好的远程方法</span>
<span class="token keyword">local</span> testf1 <span class="token operator">=</span> mainStorageService<span class="token punctuation">:</span><span class="token function">WaitForChild</span><span class="token punctuation">(</span><span class="token string">&quot;testf1&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">local</span> ret <span class="token operator">=</span> testf1<span class="token punctuation">:</span><span class="token function">InvokeServer</span><span class="token punctuation">(</span><span class="token string">&quot;ddddddddddabcdd&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">--服务端的监听执行脚本</span>
<span class="token keyword">local</span> mainStorageService <span class="token operator">=</span> game<span class="token punctuation">:</span><span class="token function">GetService</span><span class="token punctuation">(</span><span class="token string">&quot;MainStorage&quot;</span><span class="token punctuation">)</span>
<span class="token comment">--这里的 testf1 是一个RemoteFunction类型的实例,它的name = &quot;testf1&quot;</span>
<span class="token comment">--都是预先在编辑地图时预先创建好的远程方法</span>
<span class="token keyword">local</span> testf1 <span class="token operator">=</span> mainStorageService<span class="token punctuation">:</span><span class="token function">WaitForChild</span><span class="token punctuation">(</span><span class="token string">&quot;testf1&quot;</span><span class="token punctuation">)</span>
testf1<span class="token punctuation">.</span>OnServerInvoke <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>uin<span class="token punctuation">,</span> arg1<span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; recv testf1  from client:&quot;</span><span class="token operator">..</span><span class="token function">tostring</span><span class="token punctuation">(</span>uin<span class="token punctuation">)</span><span class="token operator">..</span> <span class="token string">&quot; (arg1:) &quot;</span><span class="token operator">..</span> <span class="token function">tostring</span><span class="token punctuation">(</span>arg1<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string">&quot;helloinvoke&quot;</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),$=n("p",null,[n("strong",null,[n("code",null,"RemoteFunction："),e("服务器至客户端")])],-1),nn=n("code",null,"RemoteFunction:InvokeClient",-1),en=n("br",null,null,-1),tn=n("code",null,"LocalScript",-1),sn=n("code",null,"RemoteFunction.OnClientInvoke",-1),an=n("code",null,"InvokeClient",-1),on=l(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>--服务端的调用脚本
--这里的 testf1 是一个RemoteFunction类型的实例,它的name = &quot;testf1&quot;
--都是预先在编辑地图时预先创建好的远程方法
local mainStorageService = game:GetService(&quot;MainStorage&quot;)
local testf1 = mainStorageService:WaitForChild(&quot;testf1&quot;)
local target_uin = 1000072593 --for test
wait(1)
local ret = testf1:InvokeClient( target_uin ,123,&quot;invoke client&quot;)
print(tostring(ret))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>--客户端的监听执行脚本
--这里的 testf1 是一个RemoteFunction类型的实例,它的name = &quot;testf1&quot;
--都是预先在编辑地图时预先创建好的远程方法
local mainStorageService = game:GetService(&quot;MainStorage&quot;)
local testf1 = mainStorageService:WaitForChild(&quot;testf1&quot;)

testf1.OnClientInvoke = function(arg1, arg2)
        print(&quot; recv testf1  from server:&quot;..tostring(arg1).. &quot; (arg2:) &quot;.. tostring(arg2))
        return &quot;onclientinvoke success&quot;
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function ln(cn,un){const a=i("RouterLink"),o=i("font");return u(),d("div",null,[p,m,v,n("p",null,[_,e("（远程函数）用于创建客户端和服务器用来彼此通信的游戏内"),h,e("。开发者可以通过调用"),t(a,{to:"/Api/Class/Script/RemoteFunction.html"},{default:s(()=>[k]),_:1}),e("执行特定操作，并返回其结果。当不需要返回结果时，开发者应当转为使用异步调用且无需等待响应即可继续执行的"),t(a,{to:"/Api/Class/Script/RemoteEvent.html"},{default:s(()=>[f]),_:1}),e("。"),g]),t(o,{color:"red"},{default:s(()=>[e("注意[`RemoteFunction`](/Api/Class/Script/RemoteFunction.md)对于调用方来说是同步执行的，会等待直到对端返回结果再执行下一条脚本。所以尽量不通过[`OnClientInvoke`]()调用客户端")]),_:1}),n("ul",null,[n("li",null,[t(o,{color:"red"},{default:s(()=>[e("客户端如果报错，服务器同样会报错")]),_:1})]),n("li",null,[t(o,{color:"red"},{default:s(()=>[e("如果客户端失去链接，同样会导致报错")]),_:1})]),n("li",null,[t(o,{color:"red"},{default:s(()=>[e("如果客户端调用函数缺少返回值，则服务器会一直等待")]),_:1})])]),b,S,R,F,n("table",null,[n("thead",null,[n("tr",null,[n("th",q,[n("div",x,[t(a,{to:"/Api/Parameter/Tuple.html"},{default:s(()=>[e("ReflexTuple")]),_:1}),e("  "),t(a,{to:"/Api/Class/Script/RemoteFunction_F/InvokeClient.html"},{default:s(()=>[t(o,{color:"dd00dd"},{default:s(()=>[e("InvokeClient")]),_:1})]),_:1}),e("( "),t(a,{to:"/Api/DataType/Int.html"},{default:s(()=>[e("int")]),_:1}),e(" client_uin ， "),t(a,{to:"/Api/Parameter/Tuple.html"},{default:s(()=>[e("ReflexTuple")]),_:1}),e(" arguments )")])])])]),n("tbody",null,[n("tr",null,[n("td",C,[e("调用客户端的方法."),I,e("在客户端脚本LocalScript中 设置 "),t(a,{to:"/Api/Class/Script/RemoteFunction_F/OnServerInvoke.html"},{default:s(()=>[y]),_:1}),e(" 为绑定至 RemoteFunction 的方法。")])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",A,[n("div",T,[t(a,{to:"/Api/Parameter/Tuple.html"},{default:s(()=>[e("ReflexTuple")]),_:1}),e("  "),t(a,{to:"/Api/Class/Script/RemoteFunction_F/InvokeServer.html"},{default:s(()=>[t(o,{color:"dd00dd"},{default:s(()=>[e("InvokeServer")]),_:1})]),_:1}),e("( "),t(a,{to:"/Api/Parameter/Tuple.html"},{default:s(()=>[e("ReflexTuple")]),_:1}),e(" arguments )")])])])]),n("tbody",null,[n("tr",null,[n("td",w,[e("调用服务端的方法。"),O,e("在服务端脚本Script中 设置"),t(a,{to:"/Api/Class/Script/RemoteFunction_F/OnClientInvoke.html"},{default:s(()=>[P]),_:1}),e(" 为指定 client 调用绑定至 RemoteFunction 的方法。")])])])]),N,L,n("table",null,[n("thead",null,[n("tr",null,[n("th",M,[n("div",G,[t(a,{to:"/Api/Parameter/Tuple.html"},{default:s(()=>[e("ReflexTuple")]),_:1}),e(" "),t(a,{to:"/Api/Class/Script/RemoteFunction_F/OnServerInvoke.html"},{default:s(()=>[t(o,{color:"dd00dd"},{default:s(()=>[e("OnServerInvoke")]),_:1})]),_:1}),e("( "),t(a,{to:"/Api/DataType/Int.html"},{default:s(()=>[e("int")]),_:1}),e(" client_uin , "),t(a,{to:"/Api/Parameter/Tuple.html"},{default:s(()=>[e("ReflexTuple")]),_:1}),e(" arguments )")])])])]),n("tbody",null,[n("tr",null,[n("td",V,[e("当服务器被"),t(a,{to:"/Api/Class/Script/RemoteFunction_F/InvokeServer.html"},{default:s(()=>[W]),_:1}),e("调用时将对其进行调用。")])])])]),n("table",null,[n("thead",null,[n("tr",null,[n("th",B,[n("div",E,[t(a,{to:"/Api/Parameter/Tuple.html"},{default:s(()=>[e("ReflexTuple")]),_:1}),e(" "),t(a,{to:"/Api/Class/Script/RemoteFunction_F/OnClientInvoke.html"},{default:s(()=>[t(o,{color:"dd00dd"},{default:s(()=>[e("OnClientInvoke")]),_:1})]),_:1}),e("(  "),t(a,{to:"/Api/Parameter/Tuple.html"},{default:s(()=>[e("ReflexTuple")]),_:1}),e(" arguments )")])])])]),n("tbody",null,[n("tr",null,[n("td",D,[e("当客户端被"),t(a,{to:"/Api/Class/Script/RemoteFunction_F/InvokeClient.html"},{default:s(()=>[j]),_:1}),e("调用时将对其进行调用。")])])])]),z,n("ul",null,[n("li",null,[H,n("p",null,[e("当客户端希望使用远程函数时，将会通过"),t(a,{to:"/Api/Class/Script/LocalScriptNode.html"},{default:s(()=>[J]),_:1}),e("内部的"),K,e("函数对服务器进行调用。"),Q,e(" 服务器会通过使用赋值操作符 =（而非"),t(a,{to:"/Api/Class/Script/ScriptObject.html"},{default:s(()=>[U]),_:1}),e("中的事件）将函数绑定至"),X,e("的方法监听对"),Y,e("函数的调用。当服务器被调用时，即会执行之前绑定的函数。")]),Z]),n("li",null,[$,n("p",null,[e("客户端的调用和服务器端的调用方法非常类似，但在调用客户端时需要将玩家uid作为参数传入。该过程所需要使用的函数为"),nn,e("。"),en,e(" 客户端通过使用赋值操作符 =（而非"),t(a,{to:"/Api/Class/Script/LocalScriptNode.html"},{default:s(()=>[tn]),_:1}),e("中的事件）将函数绑定至 "),sn,e("的方法监听对"),an,e("函数的调用。当玩家（客户端）被调用时，即会执行之前绑定的函数。")]),on])])])}const rn=c(r,[["render",ln],["__file","RemoteFunction.html.vue"]]);export{rn as default};
