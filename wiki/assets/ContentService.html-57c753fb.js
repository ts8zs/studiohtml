import{_ as c,M as o,p as l,q as i,R as n,N as a,V as t,t as s,a1 as u}from"./framework-5866ffd3.js";const r={},k=n("h1",{id:"contentservice",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#contentservice","aria-hidden":"true"},"#"),s(" ContentService")],-1),d=n("hr",null,null,-1),m=n("h2",{id:"描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#描述","aria-hidden":"true"},"#"),s(" 描述")],-1),v=n("p",null,"自定义内容。",-1),b=n("p",null,[n("em",null,"继承自"),s("：")],-1),h=n("hr",null,null,-1),g=n("h2",{id:"属性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),s(" 属性")],-1),_={style:{"text-align":"left"}},y={style:{width:"700px"}},f=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"请求队列大小")])],-1),x={style:{"text-align":"left"}},w={style:{width:"700px"}},S=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"请求完成大小")])],-1),q=n("hr",null,null,-1),C=n("h2",{id:"函数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#函数","aria-hidden":"true"},"#"),s(" 函数")],-1),T={style:{"text-align":"left"}},P={style:{width:"700px"}},A=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"预加载异步")])],-1),V=u(`<hr><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> WorldService <span class="token operator">=</span> game<span class="token punctuation">:</span><span class="token function">GetService</span><span class="token punctuation">(</span><span class="token string">&quot;WorldService&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">local</span> Players <span class="token operator">=</span> game<span class="token punctuation">:</span><span class="token function">GetService</span><span class="token punctuation">(</span><span class="token string">&quot;Players&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">local</span> ContentProvider <span class="token operator">=</span> game<span class="token punctuation">:</span><span class="token function">GetService</span><span class="token punctuation">(</span><span class="token string">&quot;ContentService&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">local</span> Player <span class="token operator">=</span> Players<span class="token punctuation">.</span>LocalPlayer 
<span class="token keyword">if</span> <span class="token keyword">not</span> Player <span class="token keyword">then</span>
	<span class="token keyword">return</span>
<span class="token keyword">end</span>

<span class="token keyword">local</span> PlayerGui <span class="token operator">=</span> Player<span class="token punctuation">:</span><span class="token function">WaitForChild</span><span class="token punctuation">(</span><span class="token string">&quot;PlayerGui&quot;</span><span class="token punctuation">)</span>
<span class="token comment">--创建ui布局</span>
<span class="token keyword">local</span> ScreenGui <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;UIRoot&#39;</span><span class="token punctuation">)</span>
ScreenGui<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&#39;ScreenGui&#39;</span>
ScreenGui<span class="token punctuation">.</span>RenderIndex <span class="token operator">=</span> <span class="token number">1</span>
ScreenGui<span class="token punctuation">.</span>Parent <span class="token operator">=</span> PlayerGui <span class="token comment">-- 将整个屏幕 GUI 设为玩家 GUI 的子项</span>
<span class="token keyword">local</span> size <span class="token operator">=</span> WorldService<span class="token punctuation">:</span><span class="token function">GetUISize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  
<span class="token comment">--创建背景图片</span>
<span class="token keyword">local</span> bg <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;UIImage&#39;</span><span class="token punctuation">,</span> ScreenGui<span class="token punctuation">)</span>
bg<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Bg&quot;</span>
bg<span class="token punctuation">.</span>Icon <span class="token operator">=</span> <span class="token string">&quot;sandboxSysId://ui/mobile/texture0/bigtex/bg_saijibeijing_bpS7.png&quot;</span>
bg<span class="token punctuation">.</span>Size <span class="token operator">=</span> Vector2<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>x<span class="token punctuation">,</span> size<span class="token punctuation">.</span>y<span class="token punctuation">)</span>
bg<span class="token punctuation">.</span>Pivot <span class="token operator">=</span> Vector2<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
bg<span class="token punctuation">.</span>Position <span class="token operator">=</span> Vector2<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
bg<span class="token punctuation">.</span>FillColor <span class="token operator">=</span> ColorValue<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>
bg<span class="token punctuation">.</span>FillMethod <span class="token operator">=</span> Enum<span class="token punctuation">.</span>EnumFillMethod<span class="token punctuation">.</span>None
bg<span class="token punctuation">.</span>LayoutSizeRelation <span class="token operator">=</span> Enum<span class="token punctuation">.</span>EnumLayoutSizeRelation<span class="token punctuation">.</span>Both
bg<span class="token punctuation">.</span>FillAmount <span class="token operator">=</span> <span class="token number">0</span>
bg<span class="token punctuation">.</span>Alpha <span class="token operator">=</span> <span class="token number">1</span>


<span class="token keyword">local</span> name <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;UITextLabel&#39;</span><span class="token punctuation">,</span> ScreenGui<span class="token punctuation">)</span>
name<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Title&quot;</span>
name<span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">&quot;Hello 我的自定义&quot;</span>
<span class="token comment">--设置背景框</span>
name<span class="token punctuation">.</span>LineColor <span class="token operator">=</span> ColorValue<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
name<span class="token punctuation">.</span>Size <span class="token operator">=</span> Vector2<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
<span class="token comment">--设置背景颜色</span>
name<span class="token punctuation">.</span>FillColor <span class="token operator">=</span> ColorValue<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">--设置字体颜色</span>
name<span class="token punctuation">.</span>TitleColor <span class="token operator">=</span> ColorValue<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>
<span class="token comment">--设置位置</span>
name<span class="token punctuation">.</span>Position <span class="token operator">=</span> Vector2<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>x<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> size<span class="token punctuation">.</span>y<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">--设置字体大小</span>
name<span class="token punctuation">.</span>FontSize <span class="token operator">=</span> <span class="token number">36</span>
<span class="token comment">--设置上下居中对齐</span>
name<span class="token punctuation">.</span>TextVAlignment <span class="token operator">=</span> Enum<span class="token punctuation">.</span>TextVAlignment<span class="token punctuation">.</span>Center
<span class="token comment">--设置左右向左对齐</span>
name<span class="token punctuation">.</span>TextHAlignment <span class="token operator">=</span> Enum<span class="token punctuation">.</span>TextHAlignment<span class="token punctuation">.</span>Center


<span class="token comment">--创建进度</span>
<span class="token keyword">local</span> barTitle <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;UITextLabel&#39;</span><span class="token punctuation">,</span> ScreenGui<span class="token punctuation">)</span>
barTitle<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Progress&quot;</span>
barTitle<span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">&quot;读取中&quot;</span>
<span class="token comment">--设置背景框</span>
barTitle<span class="token punctuation">.</span>LineColor <span class="token operator">=</span> ColorValue<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
barTitle<span class="token punctuation">.</span>Size <span class="token operator">=</span> Vector2<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
<span class="token comment">--设置背景颜色</span>
barTitle<span class="token punctuation">.</span>FillColor <span class="token operator">=</span> ColorValue<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">--设置字体颜色</span>
barTitle<span class="token punctuation">.</span>TitleColor <span class="token operator">=</span> ColorValue<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>
<span class="token comment">--设置位置</span>
barTitle<span class="token punctuation">.</span>Position <span class="token operator">=</span> Vector2<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>x<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> size<span class="token punctuation">.</span>y<span class="token operator">/</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token comment">--设置字体大小</span>
barTitle<span class="token punctuation">.</span>FontSize <span class="token operator">=</span> <span class="token number">32</span>
<span class="token comment">--设置上下居中对齐</span>
barTitle<span class="token punctuation">.</span>TextVAlignment <span class="token operator">=</span> Enum<span class="token punctuation">.</span>TextVAlignment<span class="token punctuation">.</span>Center
<span class="token comment">--设置左右向左对齐</span>
barTitle<span class="token punctuation">.</span>TextHAlignment <span class="token operator">=</span> Enum<span class="token punctuation">.</span>TextHAlignment<span class="token punctuation">.</span>Center

<span class="token comment">--关键的游戏等待响应，游戏加载是未知时间完成会自动给出响应</span>
game<span class="token punctuation">.</span>Loaded<span class="token punctuation">:</span><span class="token function">WaitLoaded</span><span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">local</span> <span class="token keyword">function</span> <span class="token function">LoadEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">-- 可以强制最少显示多长时间</span>
	ScreenGui<span class="token punctuation">.</span>Parent <span class="token operator">=</span> <span class="token keyword">nil</span>
<span class="token keyword">end</span>

<span class="token comment">--不要使用 ContentProvider.RequestQueueSize 来创建加载条</span>
<span class="token comment">--因为随着新资源的添加和下载，队列大小可能会随着时间的推移增加或减少。希望显示加载进度的应该一次只加载一个资源</span>

<span class="token comment">--加载资源的表格</span>
<span class="token keyword">local</span> assets <span class="token operator">=</span> 
<span class="token punctuation">{</span>
	<span class="token string">&quot;sandboxSysId://ui/mobile/texture0/common/sel_icon_custom.png&quot;</span><span class="token punctuation">,</span>
	<span class="token string">&quot;sandboxSysId://ui/mobile/texture0/common/sel_icon_map.png&quot;</span><span class="token punctuation">,</span>
	<span class="token string">&quot;sandboxSysId://ui/mobile/texture0/common/skin_enter_bg.png&quot;</span><span class="token punctuation">,</span>
	<span class="token string">&quot;sandboxSysId://ui/mobile/texture0/common/tab_up_orange.png&quot;</span><span class="token punctuation">,</span>
	<span class="token string">&quot;sandboxSysId://ui/mobile/texture0/common/tab_up_rounded_n.png&quot;</span><span class="token punctuation">,</span>
	<span class="token string">&quot;sandboxSysId://entity/100011/body.omod&quot;</span><span class="token punctuation">,</span>
	<span class="token string">&quot;sandboxSysId://entity/custommodel/fcmexample/fcmexample1.fcm&quot;</span><span class="token punctuation">,</span>
	<span class="token string">&quot;sandboxSysId://sounds/npc/chest.ogg&quot;</span>
<span class="token punctuation">}</span>

<span class="token keyword">local</span> assetsNum <span class="token operator">=</span> <span class="token number">0</span>
 <span class="token comment">--异步回调</span>
<span class="token keyword">local</span> <span class="token keyword">function</span> <span class="token function">PreloadACallBack</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
	assetsNum <span class="token operator">=</span> assetsNum <span class="token operator">+</span> <span class="token number">1</span>
	<span class="token keyword">local</span> progress <span class="token operator">=</span> assetsNum <span class="token operator">/</span> <span class="token operator">#</span>assets
	barTitle<span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">&quot;读取中&quot;</span> <span class="token operator">..</span>  math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>progress<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token operator">..</span><span class="token string">&quot;%&quot;</span>
	<span class="token keyword">if</span> assetsNum <span class="token operator">&gt;=</span> <span class="token operator">#</span>assets <span class="token keyword">then</span> <span class="token comment">--完成</span>
		<span class="token function">LoadEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">#</span>assets <span class="token keyword">do</span>
	<span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">)</span> <span class="token comment">--演示加个过渡</span>
	ContentProvider<span class="token punctuation">:</span><span class="token function">PreloadAsync</span><span class="token punctuation">(</span><span class="token punctuation">{</span>assets<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>PreloadACallBack<span class="token punctuation">)</span> <span class="token comment">-- 一次 1 个，完成再执行下一个</span>
<span class="token keyword">end</span>

<span class="token comment">-- ContentProvider:PreloadAsync(assets,function ()  -- 一次全部</span>
<span class="token comment">-- end) </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function I(N,z){const e=o("RouterLink"),p=o("font");return l(),i("div",null,[k,d,m,v,b,n("ul",null,[n("li",null,[a(e,{to:"/Api/Class/Service/ServiceNode.html"},{default:t(()=>[s("Service")]),_:1})])]),h,g,n("table",null,[n("thead",null,[n("tr",null,[n("th",_,[n("div",y,[a(e,{to:"/Api/DataType/Int.html"},{default:t(()=>[s("int")]),_:1}),s("  "),a(p,{color:"dd00dd"},{default:t(()=>[s("RequestQueueSize")]),_:1})])])])]),f]),n("table",null,[n("thead",null,[n("tr",null,[n("th",x,[n("div",w,[a(e,{to:"/Api/DataType/Int.html"},{default:t(()=>[s("int")]),_:1}),s("  "),a(p,{color:"dd00dd"},{default:t(()=>[s("RequestFinishSize")]),_:1})])])])]),S]),q,C,n("table",null,[n("thead",null,[n("tr",null,[n("th",T,[n("div",P,[a(e,{to:"/Api/Parameter/void.html"},{default:t(()=>[s("void")]),_:1}),s("  "),a(e,{to:"/Api/Class/Service/ContentService_F/PreloadAsync.html"},{default:t(()=>[a(p,{color:"dd00dd"},{default:t(()=>[s("PreloadAsync")]),_:1})]),_:1}),s(" ("),a(e,{to:"/Api/DataType/vector.html"},{default:t(()=>[s("vector")]),_:1}),s("<"),a(e,{to:"/Api/DataType/String.html"},{default:t(()=>[s("string")]),_:1}),s("> preList, "),a(e,{to:"/Api/Parameter/LuaFunction.html"},{default:t(()=>[s("LuaFunction")]),_:1}),s(" func)")])])])]),A]),V])}const L=c(r,[["render",I],["__file","ContentService.html.vue"]]);export{L as default};
