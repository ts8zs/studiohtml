import{_ as d,M as n,p as l,q as r,N as s,V as u,t as a,R as e,a1 as t}from"./framework-5866ffd3.js";const c={},o=e("h1",{id:"禁用游戏界面",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#禁用游戏界面","aria-hidden":"true"},"#"),a(" 禁用游戏界面")],-1),p=t(`<p>MiniStudio 附带了一组 GUI 元素，这些元素在默认情况下对所有游戏都启用。其中包括：</p><ul><li><p>玩家列表</p></li><li><p>当前玩家的生命条</p></li><li><p>玩家的背包</p></li><li><p>聊天窗口</p><p>如果你不需要这些元素中的任何一个，或者你已经编写了自己的元素，那么 StarterGui 服务具有启用和禁用每个元素的功能。</p></li></ul><h2 id="如何启用-禁用-gui-元素" tabindex="-1"><a class="header-anchor" href="#如何启用-禁用-gui-元素" aria-hidden="true">#</a> 如何启用/禁用 GUI 元素</h2><p>StarterGui 有一个名为 SetCoreGuiEnabled 的函数，用于启用和禁用 MiniStudio 提供的基本 GUI 元素。该函数首先需要的是一个 CoreGuiType。这是你要设置的元素。该函数第二个需要的是一个布尔值（true/false 值），它表示你是要启用还是禁用该元素。可以启用或禁用的元素列表包括：</p><p>SetCoreGuiEnabled 只能在本地脚本中调用。这意味着对 GUI 所做的任何更改都将只应用于拥有该本地脚本的玩家。</p><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><p>此示例只是禁用生命条：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此示例禁用所有核心 GUI：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>此示例禁用除了 Chat 之外的所有核心 GUI：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="顶栏-gui" tabindex="-1"><a class="header-anchor" href="#顶栏-gui" aria-hidden="true">#</a> 顶栏 GUI</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，不能禁用左上方的汉堡包菜单按钮。</p><h2 id="触摸-gui" tabindex="-1"><a class="header-anchor" href="#触摸-gui" aria-hidden="true">#</a> 触摸 GUI</h2><p>在具有触摸功能的设备上玩 游戏时，会在玩家 GUI 中添加另外两个元素：一个控制板和一个跳转按钮。可以使用 UserInputService 按照如下方式隐藏它们：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,18);function h(v,m){const i=n("font");return l(),r("div",null,[o,s(i,{color:"red"},{default:u(()=>[a("（开发中，敬请期待）")]),_:1}),p])}const b=d(c,[["render",h],["__file","UIControl.html.vue"]]);export{b as default};
