import{_ as e,M as t,p as o,q as c,R as n,N as i,V as p,a1 as s}from"./framework-5866ffd3.js";const l={},d=s('<h1 id="modulescript" tabindex="-1"><a class="header-anchor" href="#modulescript" aria-hidden="true">#</a> ModuleScript</h1><hr><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述：</h2><p><code>ModuleScript</code>它只会运行一次，并且必定返回相同的一个值。然后在 <code>ModuleScriptNode</code>作为唯一参数的情况下，通过调用<code>require</code>返回此值。对于每个<code>Lua</code>环境，<code>ModuleScriptNode</code>运行且仅运行一次，并且在后续调用<code>require</code>时返回该相同的值。<br></p><p><code>ModuleScript</code>多用于重复方法的使用，在代码编写时，应当只编写一次，在其他地方对其调用。这样可以避免复写重复的函数方法，也可以将方法进行模块化管理。一般来<code>ModuleScript</code>用于集合一类方法或定义较为相近的方法。</p><p>需要注意的是，首次调用的时候不会暂停，直到获取到返回值。根据这种情况，一定要主要ModelScript的嵌套问题，例如A(ModuleScript)对B(ModuleScript)进行了调用，但是B对A也进行了调用，则线程将挂起，但是不会暂停也不会报错，所以当出现复杂嵌套时，一定要注意ModuleScript之间相互的调用</p><p><em>继承自</em>：</p>',7),u=n("code",null,"SandBoxNode",-1),r=s(`<hr><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码：</h2><p>在WorkSpace下创建一个Script脚本节点和ModuleScript脚本节点，填入对应内容</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">--ModuleScript</span>
	<span class="token keyword">local</span> PrintFunction <span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

	<span class="token keyword">function</span> PrintFunction<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>
		<span class="token keyword">return</span> a<span class="token operator">+</span>b
	<span class="token keyword">end</span>

	<span class="token keyword">function</span> PrintFunction<span class="token punctuation">.</span><span class="token function">pri</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
		<span class="token function">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
	<span class="token keyword">end</span>

	<span class="token keyword">return</span> PrintFunction

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">--Script</span>
	<span class="token keyword">local</span> fun<span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>script<span class="token punctuation">.</span>Parent<span class="token punctuation">.</span>ModuleScript<span class="token punctuation">)</span>

	Num <span class="token operator">=</span> fun<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
	fun<span class="token punctuation">.</span><span class="token function">pri</span><span class="token punctuation">(</span>Num<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function k(v,m){const a=t("RouterLink");return o(),c("div",null,[d,n("ul",null,[n("li",null,[i(a,{to:"/Api/Class/NoType/SandboxNode.html"},{default:p(()=>[u]),_:1})])]),r])}const h=e(l,[["render",k],["__file","ModuleScriptNode.html.vue"]]);export{h as default};
