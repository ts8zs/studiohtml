import{_ as i,M as o,p as d,q as u,R as t,N as e,V as l,t as n,a1 as c}from"./framework-5866ffd3.js";const p={},r=t("h1",{id:"uilist",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#uilist","aria-hidden":"true"},"#"),n(" UIList")],-1),_=t("hr",null,null,-1),h=t("h2",{id:"描述",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#描述","aria-hidden":"true"},"#"),n(" 描述")],-1),m=t("p",null,[t("code",null,"UI"),n("列表组件")],-1),b=t("p",null,[t("em",null,"继承自"),n("：")],-1),v=t("hr",null,null,-1),y=t("h2",{id:"属性",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),n(" 属性")],-1),f={style:{"text-align":"left"}},k={style:{width:"700px"}},x={style:{"text-align":"left"}},g=t("code",null,"ScrollType",-1),A=t("code",null,"HORIZONTAL",-1),T=t("br",null,null,-1),L=t("br",null,null,-1),w=t("br",null,null,-1),I=t("br",null,null,-1),S=t("br",null,null,-1),U=t("br",null,null,-1),C=t("code",null,"SceneUIList::",-1),O={style:{"text-align":"left"}},V={style:{width:"700px"}},E={style:{"text-align":"left"}},H=t("br",null,null,-1),N=t("br",null,null,-1),R=t("br",null,null,-1),D=t("br",null,null,-1),G=t("br",null,null,-1),z=t("br",null,null,-1),B=t("code",null,"fairygui::",-1),q={style:{"text-align":"left"}},F={style:{width:"700px"}},Z=t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"left"}},"行数")])],-1),P={style:{"text-align":"left"}},W={style:{width:"700px"}},M=t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"left"}},"列数")])],-1),j={style:{"text-align":"left"}},J={style:{width:"700px"}},K=t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"left"}},"行距")])],-1),Q={style:{"text-align":"left"}},X={style:{width:"700px"}},Y=t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"left"}},"列距")])],-1),$={style:{"text-align":"left"}},tt={style:{width:"700px"}},nt=t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"left"}},[n("水平对齐方式，有以下几种："),t("br"),n("靠左对齐;"),t("br"),n("居中对齐;"),t("br"),n("靠右对齐"),t("br"),n("参见枚举"),t("code",null,"cocos2d::TextHAlignment")])])],-1),et={style:{"text-align":"left"}},lt={style:{width:"700px"}},st=t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"left"}},[n("垂直对齐方式，有以下几种："),t("br"),n("向上对齐;"),t("br"),n("居中对齐;"),t("br"),n("向下对齐;"),t("br"),n("参见枚举"),t("code",null,"cocos2d::TextVAlignment")])])],-1),at={style:{"text-align":"left"}},ot={style:{width:"700px"}},it={style:{"text-align":"left"}},dt=t("br",null,null,-1),ut=t("br",null,null,-1),ct=t("br",null,null,-1),pt=t("br",null,null,-1),rt=t("br",null,null,-1),_t=t("br",null,null,-1),ht=t("code",null,"fairygui::",-1),mt=t("hr",null,null,-1),bt=t("h2",{id:"函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#函数","aria-hidden":"true"},"#"),n(" 函数")],-1),vt={style:{"text-align":"left"}},yt={style:{width:"700px"}},ft=t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"left"}},"设置虚拟列表，只为可视范围内的item创建实体对象（不可取消）")])],-1),kt={style:{"text-align":"left"}},xt={style:{width:"700px"}},gt=t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"left"}},"设置循环列表（同时也是虚拟列表），头尾相接（不可取消）")])],-1),At=c(`<hr><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> workspace <span class="token operator">=</span> game<span class="token punctuation">:</span><span class="token function">GetService</span><span class="token punctuation">(</span><span class="token string">&quot;Workspace&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">local</span> name <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;UIList&#39;</span><span class="token punctuation">,</span> workspace<span class="token punctuation">)</span>

<span class="token comment">--设置排列方式</span>
name<span class="token punctuation">.</span>ScrollType <span class="token operator">=</span> Enum<span class="token punctuation">.</span>ListLayoutType<span class="token punctuation">.</span>FLOW_HORIZONTAL
name<span class="token punctuation">.</span>OverflowType <span class="token operator">=</span> Enum<span class="token punctuation">.</span>OverflowType<span class="token punctuation">.</span>HORIZONTAL 
<span class="token comment">--设置行数列数</span>
name<span class="token punctuation">.</span>LineCount <span class="token operator">=</span> <span class="token number">2</span>
name<span class="token punctuation">.</span>ColumnCount <span class="token operator">=</span> <span class="token number">2</span>

<span class="token comment">--设置行距列距</span>
name<span class="token punctuation">.</span>LineGap<span class="token operator">=</span> <span class="token number">50</span>
name<span class="token punctuation">.</span>ColumnGap<span class="token operator">=</span> <span class="token number">50</span>

<span class="token comment">--设置自动调整项目大小</span>
name<span class="token punctuation">.</span>AutoResizeItem<span class="token operator">=</span> <span class="token keyword">true</span>

<span class="token comment">--设置上下居中对齐</span>
name<span class="token punctuation">.</span>HorizontalAlign<span class="token operator">=</span> Enum<span class="token punctuation">.</span>TextVAlignment<span class="token punctuation">.</span>Center
<span class="token comment">--设置左右向左对齐</span>
name<span class="token punctuation">.</span>VerticalAlign<span class="token operator">=</span> Enum<span class="token punctuation">.</span>TextHAlignment<span class="token punctuation">.</span>Left

<span class="token comment">--设置虚拟循环列表</span>
name<span class="token punctuation">.</span>SetVirtualAndLoop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function Tt(Lt,wt){const s=o("RouterLink"),a=o("font");return d(),u("div",null,[r,_,h,m,b,t("ul",null,[t("li",null,[e(s,{to:"/Api/Class/Scene/SceneUIComponent.html"},{default:l(()=>[n("UIComponent")]),_:1})])]),v,y,t("table",null,[t("thead",null,[t("tr",null,[t("th",f,[t("div",k,[e(s,{to:"/Api/Enumerate/UI/OverflowType.html"},{default:l(()=>[n("OverflowType")]),_:1}),n("  "),e(a,{color:"dd00dd"},{default:l(()=>[n("OverflowType")]),_:1})])])])]),t("tbody",null,[t("tr",null,[t("td",x,[n("溢出处理，设置"),g,n("时，需要将该属性同步修改（如设置横向流动，此处需设置"),A,n("）才能达到效果，包括以下几种："),T,n("溢出部分正常显示（无拖动效果）;"),L,n("溢出部分隐藏（无拖动效果）;"),w,n("水平滚动，支持鼠标拖拽，滑轮方式水平拖动;"),I,n("垂直滚动，支持鼠标拖拽，滑轮方式垂直拖动;"),S,n("自由滚动，支持鼠标拖拽，滑轮方式任意方向拖动"),U,n("参见枚举"),C,e(s,{to:"/Api/Enumerate/UI/OverflowType.html"},{default:l(()=>[n("OverflowType")]),_:1})])])])]),t("table",null,[t("thead",null,[t("tr",null,[t("th",O,[t("div",V,[e(s,{to:"/Api/Enumerate/UI/ListLayoutType.html"},{default:l(()=>[n("ListLayoutType")]),_:1}),n("  "),e(a,{color:"dd00dd"},{default:l(()=>[n("ScrollType")]),_:1})])])])]),t("tbody",null,[t("tr",null,[t("td",E,[n("排列方式，需要与"),e(s,{to:"/Api/Enumerate/UI/OverflowType.html"},{default:l(()=>[n("OverflowType")]),_:1}),n("配套使用才有效果，包括以下几种："),H,n("单列，每行一个item，竖向排列;"),N,n("单行，每列一个item，横向排列;"),R,n("横向流动，item横向依次排列，到底视口右侧边缘或到达指定的列数，自动换行继续排列;"),D,n("竖向流动，item竖向依次排列，到底视口底部边缘或到达指定的行数，返回顶部开启新的一列继续排列;"),G,n("分页，视口宽度x视口高度作为单页大小，横向排列各个页面。每页中，item横向依次排列"),z,n("参见枚举"),B,e(s,{to:"/Api/Enumerate/UI/ListLayoutType.html"},{default:l(()=>[n("ListLayoutType")]),_:1})])])])]),t("table",null,[t("thead",null,[t("tr",null,[t("th",q,[t("div",F,[e(s,{to:"/Api/DataType/Int.html"},{default:l(()=>[n("int")]),_:1}),n("  "),e(a,{color:"dd00dd"},{default:l(()=>[n("LineCount")]),_:1})])])])]),Z]),t("table",null,[t("thead",null,[t("tr",null,[t("th",P,[t("div",W,[e(s,{to:"/Api/DataType/Int.html"},{default:l(()=>[n("int")]),_:1}),n("  "),e(a,{color:"dd00dd"},{default:l(()=>[n("ColumnCount")]),_:1})])])])]),M]),t("table",null,[t("thead",null,[t("tr",null,[t("th",j,[t("div",J,[e(s,{to:"/Api/DataType/Int.html"},{default:l(()=>[n("int")]),_:1}),n("  "),e(a,{color:"dd00dd"},{default:l(()=>[n("LineGap")]),_:1})])])])]),K]),t("table",null,[t("thead",null,[t("tr",null,[t("th",Q,[t("div",X,[e(s,{to:"/Api/DataType/Int.html"},{default:l(()=>[n("int")]),_:1}),n("  "),e(a,{color:"dd00dd"},{default:l(()=>[n("ColumnGap")]),_:1})])])])]),Y]),t("table",null,[t("thead",null,[t("tr",null,[t("th",$,[t("div",tt,[e(s,{to:"/Api/Enumerate/UI/TextHAlignment.html"},{default:l(()=>[n("TextHAlignment")]),_:1}),n("  "),e(a,{color:"dd00dd"},{default:l(()=>[n("HorizontalAlign")]),_:1})])])])]),nt]),t("table",null,[t("thead",null,[t("tr",null,[t("th",et,[t("div",lt,[e(s,{to:"/Api/Enumerate/UI/TextVAlignment.html"},{default:l(()=>[n("TextVAlignment")]),_:1}),n("  "),e(a,{color:"dd00dd"},{default:l(()=>[n("VerticalAlign")]),_:1})])])])]),st]),t("table",null,[t("thead",null,[t("tr",null,[t("th",at,[t("div",ot,[e(s,{to:"/Api/DataType/Bool.html"},{default:l(()=>[n("bool")]),_:1}),n("  "),e(a,{color:"dd00dd"},{default:l(()=>[n("AutoResizeItem")]),_:1})])])])]),t("tbody",null,[t("tr",null,[t("td",it,[n("自动调整列表项目大小，如果勾选:"),dt,n("列表布局为单列，则列表项目的宽度自动设置为列表显示区域的宽度；"),ut,n("列表布局为单行，则列表项目的高度自动设置为列表显示区域的高度；"),ct,n("列表布局为水平流动，且设置了列数时，则每行内的列表项目的宽度自动调整使行宽与列表显示区域的宽度相等；"),pt,n("列表布局为垂直流动，且设置了行数时，则每列内的项目的高度自动调整使行高与列表显示区域的高度相等；"),rt,n("列表布局为分页，则3、4规则均适用;"),_t,n("参见枚举"),ht,e(s,{to:"/Api/Enumerate/UI/ListLayoutType.html"},{default:l(()=>[n("ListLayoutType")]),_:1})])])])]),mt,bt,t("table",null,[t("thead",null,[t("tr",null,[t("th",vt,[t("div",yt,[e(s,{to:"/Api/Parameter/void.html"},{default:l(()=>[n("void")]),_:1}),n("  "),e(s,{to:"/Api/Class/Scene/SceneUIList_F/SetVirtual.html"},{default:l(()=>[e(a,{color:"dd00dd"},{default:l(()=>[n("SetVirtual")]),_:1})]),_:1}),n("( )")])])])]),ft]),t("table",null,[t("thead",null,[t("tr",null,[t("th",kt,[t("div",xt,[e(s,{to:"/Api/Parameter/void.html"},{default:l(()=>[n("void")]),_:1}),n("  "),e(s,{to:"/Api/Class/Scene/SceneUIList_F/SetVirtualAndLoop.html"},{default:l(()=>[e(a,{color:"dd00dd"},{default:l(()=>[n("SetVirtualAndLoop")]),_:1})]),_:1}),n("( )")])])])]),gt]),At])}const St=i(p,[["render",Tt],["__file","SceneUIList.html.vue"]]);export{St as default};
