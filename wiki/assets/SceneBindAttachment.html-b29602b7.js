import{_ as c,M as l,p,q as i,R as n,N as s,V as a,t,a1 as d}from"./framework-5866ffd3.js";const u={},r=n("h1",{id:"bindattachment",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#bindattachment","aria-hidden":"true"},"#"),t(" BindAttachment")],-1),h=n("hr",null,null,-1),_=n("h2",{id:"描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#描述","aria-hidden":"true"},"#"),t(" 描述")],-1),k=n("p",null,"给节点添加绑点，一节点挂在绑点上，会相对于其父节点一起改变",-1),m=n("p",null,[n("em",null,"继承自"),t("：")],-1),f=n("hr",null,null,-1),b=n("h2",{id:"属性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),t(" 属性")],-1),y={style:{"text-align":"left"}},x={style:{width:"700px"}},v=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"绑点名字")])],-1),g={style:{"text-align":"left"}},w={style:{width:"700px"}},A=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},[t("绑点坐标 ("),n("code",null,"Rainbow::Vector3f"),t(")")])])],-1),S={style:{"text-align":"left"}},V={style:{width:"700px"}},B=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},[t("绑点欧拉角 ("),n("code",null,"Rainbow::Vector3f"),t(")")])])],-1),T={style:{"text-align":"left"}},N={style:{width:"700px"}},D=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"绑点模型Id")])],-1),M={style:{"text-align":"left"}},R={style:{width:"700px"}},q=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"绑点替代的骨骼模型")])],-1),C=n("hr",null,null,-1),L=n("h2",{id:"函数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#函数","aria-hidden":"true"},"#"),t(" 函数")],-1),P={style:{"text-align":"left"}},I={style:{width:"500px"}},E=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"设置模型纹理（仅脚本可用）")])],-1),j=d(`<hr><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">--创建模型</span>
<span class="token keyword">local</span> model <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;Model&#39;</span><span class="token punctuation">,</span> game<span class="token punctuation">.</span>WorkSpace<span class="token punctuation">)</span>
model<span class="token punctuation">.</span>ModelId <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;sandboxAsset://entity/%s/body.omod&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;100041&quot;</span><span class="token punctuation">)</span>
model<span class="token punctuation">.</span>Position <span class="token operator">=</span> Vector3<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span>
<span class="token comment">--给模型设置绑点</span>
<span class="token keyword">local</span> attachment<span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;BindAttachment&#39;</span><span class="token punctuation">,</span> model<span class="token punctuation">)</span>
attachment<span class="token punctuation">.</span>BoneName <span class="token operator">=</span> <span class="token string">&#39;attachment&#39;</span>
attachment<span class="token punctuation">.</span>LocalPosition <span class="token operator">=</span> Vector3<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
attachment<span class="token punctuation">.</span>LocalScale <span class="token operator">=</span> Vector3<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function F(O,W){const e=l("RouterLink"),o=l("font");return p(),i("div",null,[r,h,_,k,m,n("ul",null,[n("li",null,[s(e,{to:"/Api/Class/NoType/SceneTransObject.html"},{default:a(()=>[t("Transform")]),_:1})])]),f,b,n("table",null,[n("thead",null,[n("tr",null,[n("th",y,[n("div",x,[s(e,{to:"/Api/DataType/String.html"},{default:a(()=>[t("string")]),_:1}),t("  "),s(o,{color:"dd00dd"},{default:a(()=>[t("BoneName")]),_:1})])])])]),v]),n("table",null,[n("thead",null,[n("tr",null,[n("th",g,[n("div",w,[s(e,{to:"/Api/DataType/Vector3.html"},{default:a(()=>[t("Vector3")]),_:1}),t("  "),s(o,{color:"dd00dd"},{default:a(()=>[t("Position")]),_:1})])])])]),A]),n("table",null,[n("thead",null,[n("tr",null,[n("th",S,[n("div",V,[s(e,{to:"/Api/DataType/Vector3.html"},{default:a(()=>[t("Vector3")]),_:1}),t("  "),s(o,{color:"dd00dd"},{default:a(()=>[t("Euler")]),_:1})])])])]),B]),n("table",null,[n("thead",null,[n("tr",null,[n("th",T,[n("div",N,[s(e,{to:"/Api/DataType/String.html"},{default:a(()=>[t("string")]),_:1}),t("  "),s(o,{color:"dd00dd"},{default:a(()=>[t("ModelId")]),_:1})])])])]),D]),n("table",null,[n("thead",null,[n("tr",null,[n("th",M,[n("div",R,[s(e,{to:"/Api/DataType/Bool.html"},{default:a(()=>[t("bool")]),_:1}),t("  "),s(o,{color:"dd00dd"},{default:a(()=>[t("RelpaceBoneModel")]),_:1})])])])]),q]),C,L,n("table",null,[n("thead",null,[n("tr",null,[n("th",P,[n("div",I,[s(e,{to:"/Api/DataType/Bool.html"},{default:a(()=>[t("bool")]),_:1}),t("  "),s(e,{to:"/Api/Class/Scene/BindAttachment_F/SetModelTexture.html"},{default:a(()=>[s(o,{color:"dd00dd"},{default:a(()=>[t("SetModelTexture")]),_:1})]),_:1}),t(" ("),s(e,{to:"/Api/DataType/String.html"},{default:a(()=>[t("string")]),_:1}),t(" texturePath)")])])])]),E]),j])}const G=c(u,[["render",F],["__file","SceneBindAttachment.html.vue"]]);export{G as default};
