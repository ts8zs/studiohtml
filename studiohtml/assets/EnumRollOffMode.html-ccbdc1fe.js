import{_ as l,M as a,p as n,q as o,R as t,t as e,N as s,V as i,a1 as r}from"./framework-204010b2.js";const c={},f=t("h1",{id:"rolloffmode",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#rolloffmode","aria-hidden":"true"},"#"),e(" RollOffMode")],-1),h=t("code",null,"Sound",-1),x=r('<hr><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><p>声音衰减模式</p><hr><h2 id="枚举" tabindex="-1"><a class="header-anchor" href="#枚举" aria-hidden="true">#</a> 枚举</h2><table><thead><tr><th style="text-align:left;"><div style="width:200px;"></div></th><th style="text-align:left;"><div style="width:100px;"></div></th><th style="text-align:left;"><div style="width:100px;"></div></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>名称</strong></td><td style="text-align:left;"><strong>值</strong></td><td style="text-align:left;"><strong>描述</strong></td></tr><tr><td style="text-align:left;">Inverse</td><td style="text-align:left;">0</td><td style="text-align:left;">该声音将遵循逆衰减模型，其中<code>mindistance</code>=全音量，<code>maxdistance</code>=声音停止衰减，衰减根据全局衰减系数</td></tr><tr><td style="text-align:left;">Linear</td><td style="text-align:left;">1</td><td style="text-align:left;">该声音将遵循线性衰减模型，其中<code>mindistance</code>=全音量，<code>maxdistance</code>=静音</td></tr><tr><td style="text-align:left;">LinearSquare</td><td style="text-align:left;">2</td><td style="text-align:left;">该声音将遵循线性平方衰减模型，其中<code>mindistance</code>=全音量，<code>maxdistance</code>=静音。</td></tr><tr><td style="text-align:left;">InverseTapered</td><td style="text-align:left;">3</td><td style="text-align:left;">在距离接近<code>mindistance</code>时，该声音将遵循逆衰减模型，在距离接近<code>maxdistance</code>的情况下，该声音会遵循线性平方衰减模型。</td></tr></tbody></table>',6);function g(y,m){const d=a("RouterLink");return n(),o("div",null,[f,t("p",null,[e("枚举所属类："),s(d,{to:"/Api/Class/Sound/SandboxSound.html"},{default:i(()=>[h]),_:1})]),x])}const u=l(c,[["render",g],["__file","EnumRollOffMode.html.vue"]]);export{u as default};
