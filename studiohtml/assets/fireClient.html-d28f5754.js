import{_ as s,M as a,p as o,q as d,R as t,t as e,N as n,V as i,a1 as r}from"./framework-204010b2.js";const c={},h=t("h1",{id:"fireclient",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fireclient","aria-hidden":"true"},"#"),e(" FireClient")],-1),u=t("hr",null,null,-1),_=t("h2",{id:"描述",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#描述","aria-hidden":"true"},"#"),e(" 描述：")],-1),p=t("code",null,"LocalScript",-1),f=t("code",null,"RemoteFunction",-1),m=t("p",null,"因为此函数用于服务器向客户端通信，因此只能在 Script 内起效。",-1),v=t("p",null,"注意",-1),x=t("li",null,[t("p",null,"有时游戏需要从一个客户端向另一个客户端发送信息。MiniStudio 不支持客户端之间的直接联系，所以任何通信必须先经由服务器。这通常由远程事件完成（不过需要时也可以用函数）。首先，发送的客户端将调用 fireServer。在服务器端，连接至 OnServerNotify 的函数将监听到此触发，然后自身调用 fireClient。")],-1),y=t("hr",null,null,-1),g=t("h2",{id:"参数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#参数","aria-hidden":"true"},"#"),e(" 参数")],-1),C=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},[t("div",{style:{width:"100px"}},"名称")]),t("th",{style:{"text-align":"left"}},[t("div",{style:{width:"100px"}},"类型")]),t("th",{style:{"text-align":"left"}},[t("div",{style:{width:"50px"}},"默认")]),t("th",{style:{"text-align":"left"}},[t("div",{style:{width:"350px"}},"描述")])])],-1),S=t("td",{style:{"text-align":"left"}},"uin",-1),R={style:{"text-align":"left"}},b=t("td",{style:{"text-align":"left"}},null,-1),E=t("td",{style:{"text-align":"left"}},[e("被事件所影响的"),t("a",{href:""},"Player待定"),e("的uin")],-1),N=t("td",{style:{"text-align":"left"}},"argument]",-1),A={style:{"text-align":"left"}},k=t("td",{style:{"text-align":"left"}},null,-1),F={style:{"text-align":"left"}},w=r(`<h2 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h2><p>无返回值</p><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function O(V,L){const l=a("RouterLink");return o(),d("div",null,[h,u,_,t("p",null,[e("函数所属类："),n(l,{to:"/Api/Class/Script/RemoteEvent.html"},{default:i(()=>[e("RemotoEvent")]),_:1})]),t("p",null,[e("为指定的玩家触发 "),n(l,{to:"/Api/Class/Script/RemoteEvent_F/OnClientNotify.html"},{default:i(()=>[e("RemoteEvent.OnClientEvent")]),_:1}),e("。只有 "),n(l,{to:"/Api/Class/Script/LocalScriptNode.html"},{default:i(()=>[p]),_:1}),e(" 中在指定玩家的客户端上运行的连接会触发。与 "),n(l,{to:"/Api/Class/Script/RemoteFunction.html"},{default:i(()=>[f]),_:1}),e(" 类的区别在于后者会队列请求。")]),m,t("ul",null,[t("li",null,[v,t("ul",null,[t("li",null,[t("p",null,[e("数据可以通过远程事件从服务器传递到客户端，就像数据从客户端传递到服务器一样。任何额外信息可作为 "),n(l,{to:"/Api/Class/Script/RemoteEvent_F/fireClient.html"},{default:i(()=>[e("RemoteEvent:fireClient")]),_:1}),e(" 和 fireAllClients 函数的参数传递。注意 FireClient 函数仍需要将发送信息的目标玩家作为第一项参数来传递。")])]),x])])]),y,g,t("table",null,[C,t("tbody",null,[t("tr",null,[S,t("td",R,[n(l,{to:"/Api/DataType/Int.html"},{default:i(()=>[e("int")]),_:1})]),b,E]),t("tr",null,[N,t("td",A,[n(l,{to:"/Api/DataType/tuple.html"},{default:i(()=>[e("ReflexTuple")]),_:1})]),k,t("td",F,[e("传入 "),n(l,{to:"/Api/Class/Script/RemoteEvent_F/OnServerNotify.html"},{default:i(()=>[e("RemoteEvent.OnServerNotify")]),_:1}),e(" 方法的参数")])])])]),w])}const q=s(c,[["render",O],["__file","fireClient.html.vue"]]);export{q as default};
