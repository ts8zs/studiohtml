import{_ as d,M as i,p as r,q as c,R as e,t,N as n,V as a,a1 as s}from"./framework-204010b2.js";const h={},u=e("h1",{id:"onclientinvoke",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#onclientinvoke","aria-hidden":"true"},"#"),t(" OnClientInvoke")],-1),p=e("hr",null,null,-1),_=e("h2",{id:"描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#描述","aria-hidden":"true"},"#"),t(" 描述")],-1),f={href:"/Api/Class/Script/RemoteFunction",target:"_blank",rel:"noopener noreferrer"},x=s('<p>当服务器脚本<a href="">Script</a>使用<a href="">RemoteFunction.InvokeClient</a>调用时，OnClientInvoke将会触发<a href="">LocalScript</a>中绑定的函数。当绑定的函数具有返回值时，对应的值也会返回值服务器。</p><p>此回调能够监听服务器向客户端所调用的远程函数。其作用是为客户端与服务器之间提供通信方法。</p><hr><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2>',4),v=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},[e("div",{style:{width:"100px"}},"名称")]),e("th",{style:{"text-align":"left"}},[e("div",{style:{width:"100px"}},"类型")]),e("th",{style:{"text-align":"left"}},[e("div",{style:{width:"50px"}},"默认")]),e("th",{style:{"text-align":"left"}},[e("div",{style:{width:"350px"}},"描述")])])],-1),m=e("td",{style:{"text-align":"left"}},"arguments",-1),y={style:{"text-align":"left"}},k=e("td",{style:{"text-align":"left"}},null,-1),g=e("td",{style:{"text-align":"left"}},[t("传入 "),e("a",{href:""},"RemoteFunction.OnClientInvoke"),t(" 方法的参数")],-1),b=e("h2",{id:"返回",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#返回","aria-hidden":"true"},"#"),t(" 返回")],-1),R=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},[e("div",{style:{width:"400px"}},"类型")]),e("th",{style:{"text-align":"left"}},[e("div",{style:{width:"400px"}},"描述")])])],-1),C={style:{"text-align":"left"}},I=e("td",{style:{"text-align":"left"}},[e("a",{href:""},"RemoteFunction.OnClientInvoke"),t("函数的返回值")],-1),w=s(`<h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function T(O,F){const o=i("ExternalLinkIcon"),l=i("RouterLink");return r(),c("div",null,[u,p,_,e("p",null,[t("函数所属类："),e("a",f,[t("RemoteFunction"),n(o)])]),e("p",null,[t("返回类型： "),n(l,{to:"/Api/DataType/tuple.html"},{default:a(()=>[t("ReflexTuple")]),_:1})]),x,e("table",null,[v,e("tbody",null,[e("tr",null,[m,e("td",y,[n(l,{to:"/Api/DataType/tuple.html"},{default:a(()=>[t("ReflexTuple")]),_:1})]),k,g])])]),b,e("table",null,[R,e("tbody",null,[e("tr",null,[e("td",C,[n(l,{to:"/Api/DataType/tuple.html"},{default:a(()=>[t("ReflexTuple")]),_:1})]),I])])]),w])}const N=d(h,[["render",T],["__file","OnClientInvoke.html.vue"]]);export{N as default};
