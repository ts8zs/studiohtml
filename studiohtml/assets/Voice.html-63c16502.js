import{_ as s,p as n,q as o,a1 as a}from"./framework-204010b2.js";const e="/studiohtml/Images/tutorials_imgs/node_imgs/resShop_import.jpg",t="/studiohtml/Images/tutorials_imgs/node_imgs/resShop_import_edit.jpg",c="/studiohtml/Images/tutorials_imgs/node_imgs/resShop_shop.jpg",p="/studiohtml/Images/tutorials_imgs/node_imgs/resShop_sound_copy.jpg",i="/studiohtml/Images/tutorials_imgs/node_imgs/workspace_add_sound.jpg",d="/studiohtml/Images/tutorials_imgs/node_imgs/workspace_sound_attr.jpg",l="/studiohtml/Images/tutorials_imgs/node_imgs/sound_script.jpg",r="/studiohtml/Images/tutorials_imgs/node_imgs/sound_play.jpg",u="/studiohtml/Images/tutorials_imgs/node_imgs/workspcae_script_sound.jpg",m={},h=a('<h1 id="声音" tabindex="-1"><a class="header-anchor" href="#声音" aria-hidden="true">#</a> 声音</h1><p>**音效与音乐：**当构建游戏时，经常会有开发者忽略掉游戏中声音与音乐的重要性。如果能对这两方面进行创造性地运用，则可以为你的游戏奠定感人肺腑或激动人心的基调、增添游戏悬念、更能让游戏中的角色栩栩如生。</p><h2 id="资源商城" tabindex="-1"><a class="header-anchor" href="#资源商城" aria-hidden="true">#</a> 资源商城</h2><ul><li><p>在个人资源中，可搜索可供使用的音频。</p></li><li><p>找到要使用的音频文件后，右键单击该音频文件后选择<code>copyid</code>（复制资源<code>ID</code>） （这个<code>ID</code> 将在下方声音节点测试中用到。）</p></li></ul><h2 id="上传自定义音频" tabindex="-1"><a class="header-anchor" href="#上传自定义音频" aria-hidden="true">#</a> 上传自定义音频</h2><p><code>MiniStudio</code>支持上传格式为<code>.mp3</code>或<code>.ogg</code>的音频文件。</p><ol><li><p>打开资源商城管理器，点击 <strong><code>+</code></strong> 按钮，从本地选择你想要导入的音频文件，并点击 <strong><code>确定</code></strong>。 <img src="'+e+'" alt="resShop_import"></p></li><li><p>在弹出的 <strong><code>文件导入</code></strong> 窗口中补充上传信息后，点击 <strong><code>提交</code></strong> 按钮。 <img src="'+t+'" alt="resShop_import_edit"></p></li><li><p>导入进度完成后，音频文件将会显示在 <strong><code>美术资源</code></strong> 文件夹下。 <img src="'+c+'" alt="resShop_shop"></p></li><li><p>右键点击文件并选择<code>copyid</code> （复制<code>ID</code>至剪贴板）（这个<code>ID</code>将在下方回放测试中用到）。 <img src="'+p+'" alt="resShop_sound_copy"></p></li></ol><h2 id="播放音乐" tabindex="-1"><a class="header-anchor" href="#播放音乐" aria-hidden="true">#</a> 播放音乐</h2><p>要设置一个曲目并在命令下播放任意歌曲，你可以使用一个基本的音频模块。播放背景音乐可以通过以下两种有用的脚本模式来实现：</p><h4 id="studio创建" tabindex="-1"><a class="header-anchor" href="#studio创建" aria-hidden="true">#</a> Studio创建</h4><p>（&quot; <code>WorkSpace</code> (场景节点)&quot;--&gt;&quot; <code>add node</code> (新增节点)&quot;--&gt;&quot; <code>Sound</code> &quot;--&gt;&quot; <code>SoundPath</code> &quot; ）</p><ol><li><p>选中<code>WorkSpace</code>添加<code>Sound</code>节点。</p><p><img src="'+i+'" alt="Shop"></p></li><li><p>选中<code>Sound</code>节点，在属性栏配置<code>SoundPath</code>。 <code>SoundPath</code>为资源商城中音频文件右键拷贝的<code>ID</code></p><p><img src="'+d+'" alt="Shop"></p></li><li><p>在当前<code>Sound</code>节点下，添加<code>Script</code>子节点。脚本控制播放逻辑。</p><p><img src="'+l+'" alt="Shop"></p><ul><li><p>手动播放 <img src="'+r+`" alt="Shop"></p></li><li><p>脚本播放</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> sound <span class="token operator">=</span> script<span class="token punctuation">.</span>Parent   <span class="token comment">--获取父节点</span>
sound<span class="token punctuation">:</span><span class="token function">PlaySound</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">--播放函数    </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><h4 id="脚本创建" tabindex="-1"><a class="header-anchor" href="#脚本创建" aria-hidden="true">#</a> 脚本创建</h4><ul><li>选中<code>WorkSpace</code>添加<code>Script</code>节点。脚本创建Sound节点和播放逻辑</li></ul><p><img src="`+u+`" alt="Shop"></p><ul><li>在脚本中，删除所有现有的行并粘贴以下代码:</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> part <span class="token operator">=</span> script<span class="token punctuation">.</span>Parent                             <span class="token comment">--获取父节点</span>
<span class="token keyword">local</span> sound <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;Sound&#39;</span><span class="token punctuation">,</span> part<span class="token punctuation">)</span>           <span class="token comment">--创建Sound节点</span>
sound<span class="token punctuation">.</span>SoundPath <span class="token operator">=</span><span class="token string">&quot;sandboxSysId://sounds/npc/chest.ogg&quot;</span> <span class="token comment">--设置资源路径</span>
sound<span class="token punctuation">.</span>IsLoop <span class="token operator">=</span> <span class="token keyword">true</span>                                    <span class="token comment">--设置循环播放</span>
sound<span class="token punctuation">.</span>RollOffMode <span class="token operator">=</span> Enum<span class="token punctuation">.</span>RollOffMode<span class="token punctuation">.</span>Linear            <span class="token comment">--设置声音衰减模式</span>
sound<span class="token punctuation">.</span>RollOffMinDistance <span class="token operator">=</span> <span class="token number">300</span>
sound<span class="token punctuation">.</span>RollOffMaxDistance <span class="token operator">=</span> <span class="token number">700</span>
sound<span class="token punctuation">:</span><span class="token function">PlaySound</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                      <span class="token comment">--播放函数</span>

<span class="token comment">--播放结束事件</span>
<span class="token comment">--sound.PlayFinish:connect(function(node) </span>
<span class="token comment">--    node:Destroy()</span>
<span class="token comment">--    print(&quot;sound is Destroy&quot;)</span>
<span class="token comment">--end)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),g=[h];function _(k,v){return n(),o("div",null,g)}const b=s(m,[["render",_],["__file","Voice.html.vue"]]);export{b as default};
