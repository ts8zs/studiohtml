import{_ as c,M as l,p as i,q as d,R as n,N as s,V as t,t as a,a1 as p}from"./framework-204010b2.js";const r={},u=p('<h1 id="uibillboard" tabindex="-1"><a class="header-anchor" href="#uibillboard" aria-hidden="true">#</a> UIBillboard</h1><hr><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><p>出现在<code>3D</code>空间中的<code>GUI</code>对象的容器。可以设置是否总是朝向摄像机，并且可以根据距离的变化改变其大小、或是在屏幕上保持相同的大小</p><p><em>继承自</em>：</p>',5),h=n("hr",null,null,-1),k=n("h2",{id:"属性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),a(" 属性")],-1),_={style:{"text-align":"left"}},b={style:{width:"700px"}},m=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"是否固定大小")])],-1),f={style:{"text-align":"left"}},v={style:{width:"700px"}},y=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"是否设置为广告位")])],-1),x={style:{"text-align":"left"}},g={style:{width:"700px"}},w=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"是否总在顶部（已注释，lua不可调用）")])],-1),S={style:{"text-align":"left"}},B={style:{width:"700px"}},V=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},[a("设置容器平面大小("),n("code",null,"Rainbow::Vector2f"),a(")")])])],-1),I={style:{"text-align":"left"}},N={style:{width:"700px"}},T=n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},"是否可见")])],-1),A=p(`<hr><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h2><hr><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> workSpace <span class="token operator">=</span> game<span class="token punctuation">.</span>WorkSpace
<span class="token keyword">local</span> loc <span class="token operator">=</span> workSpace<span class="token punctuation">.</span>SpawnLocation1
<span class="token comment">--创建SceneUIBillboard</span>
<span class="token keyword">local</span> node <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;SceneUIBillboard&#39;</span><span class="token punctuation">,</span> workSpace<span class="token punctuation">)</span>
node<span class="token punctuation">.</span>Position <span class="token operator">=</span> loc<span class="token punctuation">.</span>Position<span class="token operator">+</span>Vector3<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
node<span class="token punctuation">.</span>FixedSize <span class="token operator">=</span> <span class="token keyword">false</span>
node<span class="token punctuation">.</span>Billboard <span class="token operator">=</span> <span class="token keyword">false</span>
<span class="token comment">--Billboard上文本</span>
<span class="token keyword">local</span> image1 <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&#39;SceneUIImage&#39;</span><span class="token punctuation">,</span> node<span class="token punctuation">)</span>
image1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&#39;Image&#39;</span>
image1<span class="token punctuation">.</span>Visible <span class="token operator">=</span> <span class="token keyword">true</span>
image1<span class="token punctuation">.</span>Icon <span class="token operator">=</span> <span class="token string">&#39;ui\\\\mobile\\\\texture0\\\\common\\\\board_activity_box_white.png&#39;</span>
image1<span class="token punctuation">.</span>Size <span class="token operator">=</span> Vector2<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function U(D,z){const e=l("RouterLink"),o=l("font");return i(),d("div",null,[u,n("ul",null,[n("li",null,[s(e,{to:"/Api/Class/NoType/SceneTransObject.html"},{default:t(()=>[a("Transform")]),_:1})])]),h,k,n("table",null,[n("thead",null,[n("tr",null,[n("th",_,[n("div",b,[s(e,{to:"/Api/DataType/Bool.html"},{default:t(()=>[a("bool")]),_:1}),a("  "),s(o,{color:"dd00dd"},{default:t(()=>[a("FixedSize")]),_:1})])])])]),m]),n("table",null,[n("thead",null,[n("tr",null,[n("th",f,[n("div",v,[s(e,{to:"/Api/DataType/Bool.html"},{default:t(()=>[a("bool")]),_:1}),a("  "),s(o,{color:"dd00dd"},{default:t(()=>[a("Billboard")]),_:1})])])])]),y]),n("table",null,[n("thead",null,[n("tr",null,[n("th",x,[n("div",g,[s(e,{to:"/Api/DataType/Bool.html"},{default:t(()=>[a("bool")]),_:1}),a("  "),s(o,{color:"dd00dd"},{default:t(()=>[a("AlwaysOntop")]),_:1})])])])]),w]),n("table",null,[n("thead",null,[n("tr",null,[n("th",S,[n("div",B,[s(e,{to:"/Api/DataType/Vector2.html"},{default:t(()=>[a("Vector2")]),_:1}),a("  "),s(o,{color:"dd00dd"},{default:t(()=>[a("Size2d")]),_:1})])])])]),V]),n("table",null,[n("thead",null,[n("tr",null,[n("th",I,[n("div",N,[s(e,{to:"/Api/DataType/Bool.html"},{default:t(()=>[a("bool")]),_:1}),a("  "),s(o,{color:"dd00dd"},{default:t(()=>[a("Visible")]),_:1})])])])]),T]),A])}const C=c(r,[["render",U],["__file","SceneUIBillboard.html.vue"]]);export{C as default};
