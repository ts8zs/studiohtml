import{_ as n,p as s,q as a,a1 as e}from"./framework-204010b2.js";const t={},p=e(`<h1 id="事件系统" tabindex="-1"><a class="header-anchor" href="#事件系统" aria-hidden="true">#</a> 事件系统</h1><p><strong><code>MiniStudio</code> 事件系统:</strong> 除了属性和函数的事件外，玩家还可以自定义事件，根据条件发出一些信号。</p><h2 id="等待" tabindex="-1"><a class="header-anchor" href="#等待" aria-hidden="true">#</a> 等待</h2><p>wait()会使脚本暂停，直到指定事件的发生。除了能够传递发生的事件，还可以返回相关联的信息。</p><blockquote><p>实例：玩家触碰到复活点模型时，等待被触碰后触发输出</p></blockquote><h2 id="连接" tabindex="-1"><a class="header-anchor" href="#连接" aria-hidden="true">#</a> 连接</h2><p>较为常用的一种方式，大部分节点都具有事件，可以使用 <code>Connect()</code> 进行连接，</p><blockquote><p>实例：创建一个数值节点，当其变化时打印日志</p></blockquote><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> level <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;Int&quot;</span><span class="token punctuation">,</span>WorkSpace<span class="token punctuation">)</span>
level<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;等级&quot;</span>
level<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">5</span>

<span class="token keyword">local</span> <span class="token keyword">function</span> <span class="token function">changed</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
	<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;当前等级为&quot;</span><span class="token operator">..</span>value<span class="token punctuation">)</span>
<span class="token keyword">end</span>

level<span class="token punctuation">.</span>ValueChanged<span class="token punctuation">:</span><span class="token function">Connect</span><span class="token punctuation">(</span>changed<span class="token punctuation">)</span>
level<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">6</span>
level<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">3</span>
level<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="如何取消连接" tabindex="-1"><a class="header-anchor" href="#如何取消连接" aria-hidden="true">#</a> 如何取消连接</h2><p>经过一定的时间或者满足一定的条件，可能需要取消连接，我们可以使用<code>Disconnect()</code>断开连接。需要获得<code>Connect()</code>的返回值。</p><blockquote><p>值得注意的一点是，如果节点被消耗这些连接会自动断开不需要手动断开。</p></blockquote><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> level <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;Int&quot;</span><span class="token punctuation">,</span>WorkSpace<span class="token punctuation">)</span>
level<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;等级&quot;</span>
level<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">5</span>

<span class="token keyword">local</span> connection

<span class="token keyword">local</span> <span class="token keyword">function</span> <span class="token function">changed</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
	<span class="token keyword">if</span> value<span class="token operator">&lt;</span><span class="token number">4</span> <span class="token keyword">then</span>
		connection<span class="token punctuation">:</span><span class="token function">Disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">end</span>
	<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;当前等级为&quot;</span><span class="token operator">..</span>value<span class="token punctuation">)</span>
<span class="token keyword">end</span>

connection <span class="token operator">=</span> level<span class="token punctuation">.</span>ValueChanged<span class="token punctuation">:</span><span class="token function">Connect</span><span class="token punctuation">(</span>changed<span class="token punctuation">)</span>
level<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">6</span>
level<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">5</span>
level<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="如何使用嵌套连接" tabindex="-1"><a class="header-anchor" href="#如何使用嵌套连接" aria-hidden="true">#</a> 如何使用嵌套连接</h2><p>在实际开发中，开发者面临的业务逻辑可能需要多层的嵌套,开发者可以使用第一个事件的局部函数进行绑定。</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> level1 <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;Int&quot;</span><span class="token punctuation">,</span>WorkSpace<span class="token punctuation">)</span>
<span class="token keyword">local</span> level2 <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;Int&quot;</span><span class="token punctuation">,</span>WorkSpace<span class="token punctuation">)</span>

level1<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;等级1&quot;</span>
level2<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;等级2&quot;</span>
level1<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">5</span>
level2<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">4</span>

<span class="token keyword">local</span> <span class="token keyword">function</span> <span class="token function">changed</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
	<span class="token keyword">if</span> value<span class="token operator">&lt;</span><span class="token number">5</span> <span class="token keyword">then</span>
		level2<span class="token punctuation">.</span>ValueChanged<span class="token punctuation">:</span><span class="token function">Connect</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
			<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;等级2发生了改变&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">end</span><span class="token punctuation">)</span>
	<span class="token keyword">end</span>
	<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;等级1发生了改变&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>

level1<span class="token punctuation">.</span>ValueChanged<span class="token punctuation">:</span><span class="token function">Connect</span><span class="token punctuation">(</span>changed<span class="token punctuation">)</span>

level1<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">6</span>
level2<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">10</span>
level1<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">4</span>
level2<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">15</span>
level1<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">2</span>
level2<span class="token punctuation">.</span>Value <span class="token operator">=</span> <span class="token number">18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义事件" tabindex="-1"><a class="header-anchor" href="#自定义事件" aria-hidden="true">#</a> 自定义事件</h2><p>在实际开发中，开发者会遇到需要自定义事件的情况。例如当某位玩家获得积分第一名后，需要一个脚本播放指定特效，一个脚本对全部玩家进行通知。这种情况就可以通过 <code>CustomNotify</code> 进行触发。与 <code>RemoteEvent</code> 不同，<code>CustomNotify</code> 不能进行跨界通知。</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> CustomNotify <span class="token operator">=</span> SandboxNode<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;CustomNotify&quot;</span><span class="token punctuation">)</span>
<span class="token comment">--监听事件</span>
CustomNotify<span class="token punctuation">.</span>Notify<span class="token punctuation">:</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">)</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;TestNotify-&gt;&quot;</span><span class="token operator">..</span>v1<span class="token operator">..</span><span class="token string">&quot; &quot;</span><span class="token operator">..</span>v2<span class="token punctuation">)</span>
        <span class="token comment">--TestNotify-&gt;100 hello</span>
<span class="token keyword">end</span><span class="token punctuation">)</span>
<span class="token comment">--发送自定义事件</span>
CustomNotify<span class="token punctuation">:</span><span class="token function">Fire</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[p];function l(c,i){return s(),a("div",null,o)}const d=n(t,[["render",l],["__file","EventSystem.html.vue"]]);export{d as default};
